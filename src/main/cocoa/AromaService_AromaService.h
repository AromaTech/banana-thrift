/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#import <Foundation/Foundation.h>

#import "TProtocol.h"
#import "TProtocolFactory.h"
#import "TApplicationError.h"
#import "TProtocolError.h"
#import "TProtocolUtil.h"
#import "TProcessor.h"
#import "TBase.h"
#import "TAsyncTransport.h"
#import "TBaseClient.h"

#import "AromaAuthentication_Authentication.h"
#import "Aroma_Aroma.h"
#import "AromaChannels_Channels.h"
#import "AromaEndpoint_Endpoint.h"
#import "AromaEvents_Events.h"
#import "AromaException_Exceptions.h"
#import "AromaReactions_Reactions.h"

typedef Aroma_int AromaService_int;

typedef Aroma_long AromaService_long;

typedef Aroma_timestamp AromaService_timestamp;

typedef Aroma_uuid AromaService_uuid;

typedef AromaAuthentication_ApplicationToken * AromaService_ApplicationToken;

typedef AromaAuthentication_AuthenticationToken * AromaService_AuthenticationToken;

typedef AromaAuthentication_UserToken * AromaService_UserToken;

typedef Aroma_Application * AromaService_Application;

typedef Aroma_Image * AromaService_Image;

typedef AromaService_Urgency AromaService_Urgency;

typedef Aroma_User * AromaService_User;

typedef AromaChannels_AromaChannel * AromaService_AromaChannel;

typedef AromaChannels_MobileDevice * AromaService_MobileDevice;

typedef AromaEndpoint_Endpoint * AromaService_Endpoint;

typedef AromaEvents_HealthCheckFailed * AromaService_HealthCheckFailed;

typedef AromaReactions_Reaction * AromaService_Reaction;

typedef AromaException_AccountAlreadyExistsException * AromaService_AccountAlreadyExistsException;

typedef AromaException_ApplicationAlreadyRegisteredException * AromaService_ApplicationAlreadyRegisteredException;

typedef AromaException_ApplicationDoesNotExistException * AromaService_ApplicationDoesNotExistException;

typedef AromaException_ChannelDoesNotExistException * AromaService_ChannelDoesNotExistException;

typedef AromaException_CustomChannelUnreachableException * AromaService_CustomChannelUnreachableException;

typedef AromaException_DoesNotExistException * AromaService_DoesNotExistException;

typedef AromaException_InvalidArgumentException * AromaService_InvalidArgumentException;

typedef AromaException_InvalidCredentialsException * AromaService_InvalidCredentialsException;

typedef AromaException_InvalidTokenException * AromaService_InvalidTokenException;

typedef AromaException_MessageDoesNotExistException * AromaService_MessageDoesNotExistException;

typedef AromaException_OperationFailedException * AromaService_OperationFailedException;

typedef AromaException_UnauthorizedException * AromaService_UnauthorizedException;

typedef AromaException_UserDoesNotExistException * AromaService_UserDoesNotExistException;

@interface AromaService_SignInRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaAuthentication_Credentials * credentials;
@property (assign, nonatomic) BOOL credentialsIsSet;
- (void) unsetCredentials;

@property (strong, nonatomic) NSString * emailAddress;
@property (assign, nonatomic) BOOL emailAddressIsSet;
- (void) unsetEmailAddress;


- (instancetype) initWithCredentials: (AromaAuthentication_Credentials *) credentials emailAddress: (NSString *) emailAddress;

@end

@interface AromaService_SignInResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_UserToken userToken;
@property (assign, nonatomic) BOOL userTokenIsSet;
- (void) unsetUserToken;


- (instancetype) initWithUserToken: (AromaService_UserToken) userToken;

@end

@interface AromaService_SignUpRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) NSString * email;
@property (assign, nonatomic) BOOL emailIsSet;
- (void) unsetEmail;

@property (strong, nonatomic) NSString * name;
@property (assign, nonatomic) BOOL nameIsSet;
- (void) unsetName;

@property (strong, nonatomic) NSString * firstName;
@property (assign, nonatomic) BOOL firstNameIsSet;
- (void) unsetFirstName;

@property (strong, nonatomic) NSString * middleName;
@property (assign, nonatomic) BOOL middleNameIsSet;
- (void) unsetMiddleName;

@property (strong, nonatomic) NSString * lastName;
@property (assign, nonatomic) BOOL lastNameIsSet;
- (void) unsetLastName;

@property (strong, nonatomic) NSString * username;
@property (assign, nonatomic) BOOL usernameIsSet;
- (void) unsetUsername;

@property (strong, nonatomic) AromaService_uuid organizationId;
@property (assign, nonatomic) BOOL organizationIdIsSet;
- (void) unsetOrganizationId;

@property (strong, nonatomic) AromaAuthentication_Credentials * credentials;
@property (assign, nonatomic) BOOL credentialsIsSet;
- (void) unsetCredentials;

@property (assign, nonatomic) AromaService_Role mainRole;
@property (assign, nonatomic) BOOL mainRoleIsSet;
- (void) unsetMainRole;

@property (assign, nonatomic) AromaService_timestamp birthDate;
@property (assign, nonatomic) BOOL birthDateIsSet;
- (void) unsetBirthDate;

@property (strong, nonatomic) NSString * githubProfile;
@property (assign, nonatomic) BOOL githubProfileIsSet;
- (void) unsetGithubProfile;

@property (strong, nonatomic) AromaService_Image profileImage;
@property (assign, nonatomic) BOOL profileImageIsSet;
- (void) unsetProfileImage;


- (instancetype) initWithEmail: (NSString *) email name: (NSString *) name firstName: (NSString *) firstName middleName: (NSString *) middleName lastName: (NSString *) lastName username: (NSString *) username organizationId: (AromaService_uuid) organizationId credentials: (AromaAuthentication_Credentials *) credentials mainRole: (AromaService_Role) mainRole birthDate: (AromaService_timestamp) birthDate githubProfile: (NSString *) githubProfile profileImage: (AromaService_Image) profileImage;

@end

@interface AromaService_SignUpResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_UserToken userToken;
@property (assign, nonatomic) BOOL userTokenIsSet;
- (void) unsetUserToken;

@property (strong, nonatomic) AromaAuthentication_AromaAccount * account;
@property (assign, nonatomic) BOOL accountIsSet;
- (void) unsetAccount;

@property (strong, nonatomic) AromaService_uuid userId;
@property (assign, nonatomic) BOOL userIdIsSet;
- (void) unsetUserId;


- (instancetype) initWithUserToken: (AromaService_UserToken) userToken account: (AromaAuthentication_AromaAccount *) account userId: (AromaService_uuid) userId;

@end

@interface AromaService_CheckExistsRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) NSString * emailAddress;
@property (assign, nonatomic) BOOL emailAddressIsSet;
- (void) unsetEmailAddress;


- (instancetype) initWithEmailAddress: (NSString *) emailAddress;

@end

@interface AromaService_CheckExistsResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (assign, nonatomic) BOOL exists;
@property (assign, nonatomic) BOOL existsIsSet;
- (void) unsetExists;

@property (strong, nonatomic) NSString * message;
@property (assign, nonatomic) BOOL messageIsSet;
- (void) unsetMessage;


- (instancetype) initWithExists: (BOOL) exists message: (NSString *) message;

@end

@interface AromaService_GetUserInfoRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_UserToken token;
@property (assign, nonatomic) BOOL tokenIsSet;
- (void) unsetToken;

@property (strong, nonatomic) AromaService_uuid userId;
@property (assign, nonatomic) BOOL userIdIsSet;
- (void) unsetUserId;

@property (strong, nonatomic) NSString * email;
@property (assign, nonatomic) BOOL emailIsSet;
- (void) unsetEmail;


- (instancetype) initWithToken: (AromaService_UserToken) token userId: (AromaService_uuid) userId email: (NSString *) email;

@end

@interface AromaService_GetUserInfoResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_User userInfo;
@property (assign, nonatomic) BOOL userInfoIsSet;
- (void) unsetUserInfo;


- (instancetype) initWithUserInfo: (AromaService_User) userInfo;

@end

@interface AromaService_GetApplicationInfoRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_AuthenticationToken token;
@property (assign, nonatomic) BOOL tokenIsSet;
- (void) unsetToken;

@property (strong, nonatomic) AromaService_uuid applicationId;
@property (assign, nonatomic) BOOL applicationIdIsSet;
- (void) unsetApplicationId;

@property (assign, nonatomic) BOOL includeFollowingInfo;
@property (assign, nonatomic) BOOL includeFollowingInfoIsSet;
- (void) unsetIncludeFollowingInfo;


- (instancetype) initWithToken: (AromaService_AuthenticationToken) token applicationId: (AromaService_uuid) applicationId includeFollowingInfo: (BOOL) includeFollowingInfo;

@end

@interface AromaService_GetApplicationInfoResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_Application applicationInfo;
@property (assign, nonatomic) BOOL applicationInfoIsSet;
- (void) unsetApplicationInfo;


- (instancetype) initWithApplicationInfo: (AromaService_Application) applicationInfo;

@end

@interface AromaService_GetApplicationsOwnedByRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_UserToken token;
@property (assign, nonatomic) BOOL tokenIsSet;
- (void) unsetToken;

@property (strong, nonatomic) AromaService_uuid userId;
@property (assign, nonatomic) BOOL userIdIsSet;
- (void) unsetUserId;


- (instancetype) initWithToken: (AromaService_UserToken) token userId: (AromaService_uuid) userId;

@end

@interface AromaService_GetApplicationsOwnedByResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) NSMutableArray<AromaService_Application> * applications;
@property (assign, nonatomic) BOOL applicationsIsSet;
- (void) unsetApplications;


- (instancetype) initWithApplications: (NSArray<AromaService_Application> *) applications;

@end

@interface AromaService_ProvisionApplicationRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_UserToken token;
@property (assign, nonatomic) BOOL tokenIsSet;
- (void) unsetToken;

@property (strong, nonatomic) NSString * applicationName;
@property (assign, nonatomic) BOOL applicationNameIsSet;
- (void) unsetApplicationName;

@property (assign, nonatomic) AromaService_ProgrammingLanguage programmingLanguage;
@property (assign, nonatomic) BOOL programmingLanguageIsSet;
- (void) unsetProgrammingLanguage;

@property (strong, nonatomic) AromaService_uuid organizationId;
@property (assign, nonatomic) BOOL organizationIdIsSet;
- (void) unsetOrganizationId;

@property (strong, nonatomic) AromaService_Image icon;
@property (assign, nonatomic) BOOL iconIsSet;
- (void) unsetIcon;

@property (strong, nonatomic) NSMutableSet<AromaService_uuid> * owners;
@property (assign, nonatomic) BOOL ownersIsSet;
- (void) unsetOwners;

@property (strong, nonatomic) NSString * applicationDescription;
@property (assign, nonatomic) BOOL applicationDescriptionIsSet;
- (void) unsetApplicationDescription;

@property (assign, nonatomic) AromaService_Tier tier;
@property (assign, nonatomic) BOOL tierIsSet;
- (void) unsetTier;


- (instancetype) initWithToken: (AromaService_UserToken) token applicationName: (NSString *) applicationName programmingLanguage: (AromaService_ProgrammingLanguage) programmingLanguage organizationId: (AromaService_uuid) organizationId icon: (AromaService_Image) icon owners: (NSSet<AromaService_uuid> *) owners applicationDescription: (NSString *) applicationDescription tier: (AromaService_Tier) tier;

@end

@interface AromaService_ProvisionApplicationResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_ApplicationToken applicationToken;
@property (assign, nonatomic) BOOL applicationTokenIsSet;
- (void) unsetApplicationToken;

@property (strong, nonatomic) AromaService_Application applicationInfo;
@property (assign, nonatomic) BOOL applicationInfoIsSet;
- (void) unsetApplicationInfo;


- (instancetype) initWithApplicationToken: (AromaService_ApplicationToken) applicationToken applicationInfo: (AromaService_Application) applicationInfo;

@end

@interface AromaService_DeleteApplicationRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_UserToken token;
@property (assign, nonatomic) BOOL tokenIsSet;
- (void) unsetToken;

@property (strong, nonatomic) AromaService_uuid applicationId;
@property (assign, nonatomic) BOOL applicationIdIsSet;
- (void) unsetApplicationId;


- (instancetype) initWithToken: (AromaService_UserToken) token applicationId: (AromaService_uuid) applicationId;

@end

@interface AromaService_DeleteApplicationResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) NSString * message;
@property (assign, nonatomic) BOOL messageIsSet;
- (void) unsetMessage;


- (instancetype) initWithMessage: (NSString *) message;

@end

@interface AromaService_UpdateApplicationRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_UserToken token;
@property (assign, nonatomic) BOOL tokenIsSet;
- (void) unsetToken;

@property (strong, nonatomic) AromaService_Application updatedApplication;
@property (assign, nonatomic) BOOL updatedApplicationIsSet;
- (void) unsetUpdatedApplication;


- (instancetype) initWithToken: (AromaService_UserToken) token updatedApplication: (AromaService_Application) updatedApplication;

@end

@interface AromaService_UpdateApplicationResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_Application application;
@property (assign, nonatomic) BOOL applicationIsSet;
- (void) unsetApplication;


- (instancetype) initWithApplication: (AromaService_Application) application;

@end

@interface AromaService_SearchForApplicationsRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_UserToken token;
@property (assign, nonatomic) BOOL tokenIsSet;
- (void) unsetToken;

@property (strong, nonatomic) NSString * applicationName;
@property (assign, nonatomic) BOOL applicationNameIsSet;
- (void) unsetApplicationName;

@property (strong, nonatomic) AromaService_uuid organizationId;
@property (assign, nonatomic) BOOL organizationIdIsSet;
- (void) unsetOrganizationId;


- (instancetype) initWithToken: (AromaService_UserToken) token applicationName: (NSString *) applicationName organizationId: (AromaService_uuid) organizationId;

@end

@interface AromaService_SearchForApplicationsResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) NSMutableArray<AromaService_Application> * applications;
@property (assign, nonatomic) BOOL applicationsIsSet;
- (void) unsetApplications;


- (instancetype) initWithApplications: (NSArray<AromaService_Application> *) applications;

@end

@interface AromaService_RecreateApplicationTokenRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_UserToken token;
@property (assign, nonatomic) BOOL tokenIsSet;
- (void) unsetToken;

@property (strong, nonatomic) AromaService_uuid applicationId;
@property (assign, nonatomic) BOOL applicationIdIsSet;
- (void) unsetApplicationId;


- (instancetype) initWithToken: (AromaService_UserToken) token applicationId: (AromaService_uuid) applicationId;

@end

@interface AromaService_RecreateApplicationTokenResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_ApplicationToken applicationToken;
@property (assign, nonatomic) BOOL applicationTokenIsSet;
- (void) unsetApplicationToken;


- (instancetype) initWithApplicationToken: (AromaService_ApplicationToken) applicationToken;

@end

@interface AromaService_RenewApplicationTokenRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_UserToken token;
@property (assign, nonatomic) BOOL tokenIsSet;
- (void) unsetToken;

@property (strong, nonatomic) Aroma_LengthOfTime * newLifetime;
- (Aroma_LengthOfTime *) newLifetime __attribute__((objc_method_family(none)));
@property (assign, nonatomic) BOOL newLifetimeIsSet;
- (void) unsetNewLifetime;

@property (strong, nonatomic) AromaService_uuid applicationId;
@property (assign, nonatomic) BOOL applicationIdIsSet;
- (void) unsetApplicationId;


- (instancetype) initWithToken: (AromaService_UserToken) token newLifetime: (Aroma_LengthOfTime *) newLifetime applicationId: (AromaService_uuid) applicationId;

@end

@interface AromaService_RenewApplicationTokenResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_ApplicationToken applicationToken;
@property (assign, nonatomic) BOOL applicationTokenIsSet;
- (void) unsetApplicationToken;


- (instancetype) initWithApplicationToken: (AromaService_ApplicationToken) applicationToken;

@end

@interface AromaService_GetApplicationsFollowedByRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_UserToken token;
@property (assign, nonatomic) BOOL tokenIsSet;
- (void) unsetToken;

@property (strong, nonatomic) AromaService_uuid userId;
@property (assign, nonatomic) BOOL userIdIsSet;
- (void) unsetUserId;


- (instancetype) initWithToken: (AromaService_UserToken) token userId: (AromaService_uuid) userId;

@end

@interface AromaService_GetApplicationsFollowedByResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) NSMutableArray<AromaService_Application> * applications;
@property (assign, nonatomic) BOOL applicationsIsSet;
- (void) unsetApplications;


- (instancetype) initWithApplications: (NSArray<AromaService_Application> *) applications;

@end

@interface AromaService_FollowApplicationRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_UserToken token;
@property (assign, nonatomic) BOOL tokenIsSet;
- (void) unsetToken;

@property (strong, nonatomic) AromaService_uuid applicationId;
@property (assign, nonatomic) BOOL applicationIdIsSet;
- (void) unsetApplicationId;

@property (strong, nonatomic) AromaService_uuid organizationId;
@property (assign, nonatomic) BOOL organizationIdIsSet;
- (void) unsetOrganizationId;


- (instancetype) initWithToken: (AromaService_UserToken) token applicationId: (AromaService_uuid) applicationId organizationId: (AromaService_uuid) organizationId;

@end

@interface AromaService_FollowApplicationResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) NSString * message;
@property (assign, nonatomic) BOOL messageIsSet;
- (void) unsetMessage;


- (instancetype) initWithMessage: (NSString *) message;

@end

@interface AromaService_UnfollowApplicationRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_UserToken token;
@property (assign, nonatomic) BOOL tokenIsSet;
- (void) unsetToken;

@property (strong, nonatomic) AromaService_uuid applicationId;
@property (assign, nonatomic) BOOL applicationIdIsSet;
- (void) unsetApplicationId;

@property (strong, nonatomic) AromaService_uuid organizationId;
@property (assign, nonatomic) BOOL organizationIdIsSet;
- (void) unsetOrganizationId;


- (instancetype) initWithToken: (AromaService_UserToken) token applicationId: (AromaService_uuid) applicationId organizationId: (AromaService_uuid) organizationId;

@end

@interface AromaService_UnfollowApplicationResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) NSString * message;
@property (assign, nonatomic) BOOL messageIsSet;
- (void) unsetMessage;


- (instancetype) initWithMessage: (NSString *) message;

@end

@interface AromaService_GetApplicationMessagesRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_UserToken token;
@property (assign, nonatomic) BOOL tokenIsSet;
- (void) unsetToken;

@property (strong, nonatomic) AromaService_uuid applicationId;
@property (assign, nonatomic) BOOL applicationIdIsSet;
- (void) unsetApplicationId;

@property (assign, nonatomic) AromaService_int limit;
@property (assign, nonatomic) BOOL limitIsSet;
- (void) unsetLimit;


- (instancetype) initWithToken: (AromaService_UserToken) token applicationId: (AromaService_uuid) applicationId limit: (AromaService_int) limit;

@end

@interface AromaService_GetApplicationMessagesResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) NSMutableArray<AromaService_Message *> * messages;
@property (assign, nonatomic) BOOL messagesIsSet;
- (void) unsetMessages;

@property (assign, nonatomic) AromaService_int totalMessagesMatching;
@property (assign, nonatomic) BOOL totalMessagesMatchingIsSet;
- (void) unsetTotalMessagesMatching;


- (instancetype) initWithMessages: (NSArray<AromaService_Message *> *) messages totalMessagesMatching: (AromaService_int) totalMessagesMatching;

@end

@interface AromaService_GetFullMessageRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_UserToken token;
@property (assign, nonatomic) BOOL tokenIsSet;
- (void) unsetToken;

@property (strong, nonatomic) AromaService_uuid messageId;
@property (assign, nonatomic) BOOL messageIdIsSet;
- (void) unsetMessageId;

@property (strong, nonatomic) AromaService_uuid applicationId;
@property (assign, nonatomic) BOOL applicationIdIsSet;
- (void) unsetApplicationId;


- (instancetype) initWithToken: (AromaService_UserToken) token messageId: (AromaService_uuid) messageId applicationId: (AromaService_uuid) applicationId;

@end

@interface AromaService_GetFullMessageResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) Aroma_Message * fullMessage;
@property (assign, nonatomic) BOOL fullMessageIsSet;
- (void) unsetFullMessage;


- (instancetype) initWithFullMessage: (Aroma_Message *) fullMessage;

@end

@interface AromaService_GetMediaRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_UserToken token;
@property (assign, nonatomic) BOOL tokenIsSet;
- (void) unsetToken;

@property (strong, nonatomic) AromaService_uuid mediaId;
@property (assign, nonatomic) BOOL mediaIdIsSet;
- (void) unsetMediaId;

@property (strong, nonatomic) Aroma_Dimension * desiredThumbnailSize;
@property (assign, nonatomic) BOOL desiredThumbnailSizeIsSet;
- (void) unsetDesiredThumbnailSize;


- (instancetype) initWithToken: (AromaService_UserToken) token mediaId: (AromaService_uuid) mediaId desiredThumbnailSize: (Aroma_Dimension *) desiredThumbnailSize;

@end

@interface AromaService_GetMediaResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) Aroma_Image * image;
@property (assign, nonatomic) BOOL imageIsSet;
- (void) unsetImage;


- (instancetype) initWithImage: (Aroma_Image *) image;

@end

@interface AromaService_DeleteMessageRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_UserToken token;
@property (assign, nonatomic) BOOL tokenIsSet;
- (void) unsetToken;

@property (strong, nonatomic) AromaService_uuid messageId;
@property (assign, nonatomic) BOOL messageIdIsSet;
- (void) unsetMessageId;

@property (strong, nonatomic) AromaService_uuid applicationId;
@property (assign, nonatomic) BOOL applicationIdIsSet;
- (void) unsetApplicationId;

@property (strong, nonatomic) NSMutableArray<AromaService_uuid> * messageIds;
@property (assign, nonatomic) BOOL messageIdsIsSet;
- (void) unsetMessageIds;

@property (assign, nonatomic) BOOL deleteAll;
@property (assign, nonatomic) BOOL deleteAllIsSet;
- (void) unsetDeleteAll;


- (instancetype) initWithToken: (AromaService_UserToken) token messageId: (AromaService_uuid) messageId applicationId: (AromaService_uuid) applicationId messageIds: (NSArray<AromaService_uuid> *) messageIds deleteAll: (BOOL) deleteAll;

@end

@interface AromaService_DeleteMessageResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (assign, nonatomic) AromaService_int messagesDeleted;
@property (assign, nonatomic) BOOL messagesDeletedIsSet;
- (void) unsetMessagesDeleted;


- (instancetype) initWithMessagesDeleted: (AromaService_int) messagesDeleted;

@end

@interface AromaService_DismissMessageRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_UserToken token;
@property (assign, nonatomic) BOOL tokenIsSet;
- (void) unsetToken;

@property (strong, nonatomic) AromaService_uuid messageId;
@property (assign, nonatomic) BOOL messageIdIsSet;
- (void) unsetMessageId;

@property (strong, nonatomic) AromaService_uuid applicationId;
@property (assign, nonatomic) BOOL applicationIdIsSet;
- (void) unsetApplicationId;

@property (strong, nonatomic) NSMutableArray<AromaService_uuid> * messageIds;
@property (assign, nonatomic) BOOL messageIdsIsSet;
- (void) unsetMessageIds;

@property (assign, nonatomic) BOOL dismissAll;
@property (assign, nonatomic) BOOL dismissAllIsSet;
- (void) unsetDismissAll;


- (instancetype) initWithToken: (AromaService_UserToken) token messageId: (AromaService_uuid) messageId applicationId: (AromaService_uuid) applicationId messageIds: (NSArray<AromaService_uuid> *) messageIds dismissAll: (BOOL) dismissAll;

@end

@interface AromaService_DismissMessageResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (assign, nonatomic) AromaService_int messagesDismissed;
@property (assign, nonatomic) BOOL messagesDismissedIsSet;
- (void) unsetMessagesDismissed;


- (instancetype) initWithMessagesDismissed: (AromaService_int) messagesDismissed;

@end

@interface AromaService_GetInboxRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_UserToken token;
@property (assign, nonatomic) BOOL tokenIsSet;
- (void) unsetToken;

@property (assign, nonatomic) AromaService_int limit;
@property (assign, nonatomic) BOOL limitIsSet;
- (void) unsetLimit;


- (instancetype) initWithToken: (AromaService_UserToken) token limit: (AromaService_int) limit;

@end

@interface AromaService_GetInboxResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) NSMutableArray<AromaService_Message *> * messages;
@property (assign, nonatomic) BOOL messagesIsSet;
- (void) unsetMessages;


- (instancetype) initWithMessages: (NSArray<AromaService_Message *> *) messages;

@end

@interface AromaService_GetActivityRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_UserToken token;
@property (assign, nonatomic) BOOL tokenIsSet;
- (void) unsetToken;

@property (assign, nonatomic) AromaService_int limit;
@property (assign, nonatomic) BOOL limitIsSet;
- (void) unsetLimit;


- (instancetype) initWithToken: (AromaService_UserToken) token limit: (AromaService_int) limit;

@end

@interface AromaService_GetActivityResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) NSMutableArray<AromaService_Event *> * events;
@property (assign, nonatomic) BOOL eventsIsSet;
- (void) unsetEvents;


- (instancetype) initWithEvents: (NSArray<AromaService_Event *> *) events;

@end

@interface AromaService_DeleteActivityRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_UserToken token;
@property (assign, nonatomic) BOOL tokenIsSet;
- (void) unsetToken;

@property (strong, nonatomic) AromaService_uuid eventId;
@property (assign, nonatomic) BOOL eventIdIsSet;
- (void) unsetEventId;

@property (assign, nonatomic) BOOL deleteAll;
@property (assign, nonatomic) BOOL deleteAllIsSet;
- (void) unsetDeleteAll;

@property (strong, nonatomic) NSMutableArray<AromaService_uuid> * multipleEventIds;
@property (assign, nonatomic) BOOL multipleEventIdsIsSet;
- (void) unsetMultipleEventIds;


- (instancetype) initWithToken: (AromaService_UserToken) token eventId: (AromaService_uuid) eventId deleteAll: (BOOL) deleteAll multipleEventIds: (NSArray<AromaService_uuid> *) multipleEventIds;

@end

@interface AromaService_DeleteActivityResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (assign, nonatomic) AromaService_int totalEventsDeleted;
@property (assign, nonatomic) BOOL totalEventsDeletedIsSet;
- (void) unsetTotalEventsDeleted;


- (instancetype) initWithTotalEventsDeleted: (AromaService_int) totalEventsDeleted;

@end

@interface AromaService_GetReactionsRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_UserToken token;
@property (assign, nonatomic) BOOL tokenIsSet;
- (void) unsetToken;

@property (strong, nonatomic) AromaService_uuid forAppId;
@property (assign, nonatomic) BOOL forAppIdIsSet;
- (void) unsetForAppId;


- (instancetype) initWithToken: (AromaService_UserToken) token forAppId: (AromaService_uuid) forAppId;

@end

@interface AromaService_GetReactionsResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) NSMutableArray<AromaService_Reaction> * reactions;
@property (assign, nonatomic) BOOL reactionsIsSet;
- (void) unsetReactions;


- (instancetype) initWithReactions: (NSArray<AromaService_Reaction> *) reactions;

@end

@interface AromaService_UpdateReactionsRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_UserToken token;
@property (assign, nonatomic) BOOL tokenIsSet;
- (void) unsetToken;

@property (strong, nonatomic) AromaService_uuid forAppId;
@property (assign, nonatomic) BOOL forAppIdIsSet;
- (void) unsetForAppId;

@property (strong, nonatomic) NSMutableArray<AromaService_Reaction> * reactions;
@property (assign, nonatomic) BOOL reactionsIsSet;
- (void) unsetReactions;


- (instancetype) initWithToken: (AromaService_UserToken) token forAppId: (AromaService_uuid) forAppId reactions: (NSArray<AromaService_Reaction> *) reactions;

@end

@interface AromaService_UpdateReactionsResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) NSMutableArray<AromaService_Reaction> * reactions;
@property (assign, nonatomic) BOOL reactionsIsSet;
- (void) unsetReactions;


- (instancetype) initWithReactions: (NSArray<AromaService_Reaction> *) reactions;

@end

@interface AromaService_GetBuzzRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_UserToken token;
@property (assign, nonatomic) BOOL tokenIsSet;
- (void) unsetToken;


- (instancetype) initWithToken: (AromaService_UserToken) token;

@end

@interface AromaService_GetBuzzResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) NSMutableArray<AromaService_User> * freshUsers;
@property (assign, nonatomic) BOOL freshUsersIsSet;
- (void) unsetFreshUsers;

@property (strong, nonatomic) NSMutableArray<AromaService_Application> * freshApplications;
@property (assign, nonatomic) BOOL freshApplicationsIsSet;
- (void) unsetFreshApplications;

@property (strong, nonatomic) NSMutableArray<AromaService_HealthCheckFailed> * failedHealthChecks;
@property (assign, nonatomic) BOOL failedHealthChecksIsSet;
- (void) unsetFailedHealthChecks;

@property (strong, nonatomic) NSMutableArray<AromaService_Event *> * generalEvents;
@property (assign, nonatomic) BOOL generalEventsIsSet;
- (void) unsetGeneralEvents;


- (instancetype) initWithFreshUsers: (NSArray<AromaService_User> *) freshUsers freshApplications: (NSArray<AromaService_Application> *) freshApplications failedHealthChecks: (NSArray<AromaService_HealthCheckFailed> *) failedHealthChecks generalEvents: (NSArray<AromaService_Event *> *) generalEvents;

@end

@interface AromaService_GetDashboardRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_UserToken token;
@property (assign, nonatomic) BOOL tokenIsSet;
- (void) unsetToken;


- (instancetype) initWithToken: (AromaService_UserToken) token;

@end

@interface AromaService_GetDashboardResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (assign, nonatomic) AromaService_int unreadMessageCount;
@property (assign, nonatomic) BOOL unreadMessageCountIsSet;
- (void) unsetUnreadMessageCount;

@property (assign, nonatomic) AromaService_int totalMessagesLastHour;
@property (assign, nonatomic) BOOL totalMessagesLastHourIsSet;
- (void) unsetTotalMessagesLastHour;

@property (assign, nonatomic) AromaService_int totalMessagesLast24hrs;
@property (assign, nonatomic) BOOL totalMessagesLast24hrsIsSet;
- (void) unsetTotalMessagesLast24hrs;

@property (strong, nonatomic) NSMutableArray<AromaService_Message *> * recentMessages;
@property (assign, nonatomic) BOOL recentMessagesIsSet;
- (void) unsetRecentMessages;

@property (assign, nonatomic) AromaService_int numberOfLowUrgencyMessages;
@property (assign, nonatomic) BOOL numberOfLowUrgencyMessagesIsSet;
- (void) unsetNumberOfLowUrgencyMessages;

@property (assign, nonatomic) AromaService_int numberOfMediumUrgencyMessages;
@property (assign, nonatomic) BOOL numberOfMediumUrgencyMessagesIsSet;
- (void) unsetNumberOfMediumUrgencyMessages;

@property (assign, nonatomic) AromaService_int numberOfHighUrgencyMessages;
@property (assign, nonatomic) BOOL numberOfHighUrgencyMessagesIsSet;
- (void) unsetNumberOfHighUrgencyMessages;


- (instancetype) initWithUnreadMessageCount: (AromaService_int) unreadMessageCount totalMessagesLastHour: (AromaService_int) totalMessagesLastHour totalMessagesLast24hrs: (AromaService_int) totalMessagesLast24hrs recentMessages: (NSArray<AromaService_Message *> *) recentMessages numberOfLowUrgencyMessages: (AromaService_int) numberOfLowUrgencyMessages numberOfMediumUrgencyMessages: (AromaService_int) numberOfMediumUrgencyMessages numberOfHighUrgencyMessages: (AromaService_int) numberOfHighUrgencyMessages;

@end

@interface AromaService_CheckIfDeviceIsRegisteredRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_UserToken token;
@property (assign, nonatomic) BOOL tokenIsSet;
- (void) unsetToken;

@property (strong, nonatomic) AromaService_MobileDevice device;
@property (assign, nonatomic) BOOL deviceIsSet;
- (void) unsetDevice;


- (instancetype) initWithToken: (AromaService_UserToken) token device: (AromaService_MobileDevice) device;

@end

@interface AromaService_CheckIfDeviceIsRegisteredResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (assign, nonatomic) BOOL isRegistered;
@property (assign, nonatomic) BOOL isRegisteredIsSet;
- (void) unsetIsRegistered;


- (instancetype) initWithIsRegistered: (BOOL) isRegistered;

@end

@interface AromaService_GetRegisteredDevicesRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_UserToken token;
@property (assign, nonatomic) BOOL tokenIsSet;
- (void) unsetToken;


- (instancetype) initWithToken: (AromaService_UserToken) token;

@end

@interface AromaService_GetRegisteredDevicesResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) NSMutableArray<AromaService_MobileDevice> * devices;
@property (assign, nonatomic) BOOL devicesIsSet;
- (void) unsetDevices;


- (instancetype) initWithDevices: (NSArray<AromaService_MobileDevice> *) devices;

@end

@interface AromaService_RegisterDeviceRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_UserToken token;
@property (assign, nonatomic) BOOL tokenIsSet;
- (void) unsetToken;

@property (strong, nonatomic) AromaService_MobileDevice device;
@property (assign, nonatomic) BOOL deviceIsSet;
- (void) unsetDevice;


- (instancetype) initWithToken: (AromaService_UserToken) token device: (AromaService_MobileDevice) device;

@end

@interface AromaService_RegisterDeviceResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) NSString * message;
@property (assign, nonatomic) BOOL messageIsSet;
- (void) unsetMessage;


- (instancetype) initWithMessage: (NSString *) message;

@end

@interface AromaService_UnregisterDeviceRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_UserToken token;
@property (assign, nonatomic) BOOL tokenIsSet;
- (void) unsetToken;

@property (strong, nonatomic) AromaService_MobileDevice device;
@property (assign, nonatomic) BOOL deviceIsSet;
- (void) unsetDevice;


- (instancetype) initWithToken: (AromaService_UserToken) token device: (AromaService_MobileDevice) device;

@end

@interface AromaService_UnregisterDeviceResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_MobileDevice removedDevice;
@property (assign, nonatomic) BOOL removedDeviceIsSet;
- (void) unsetRemovedDevice;


- (instancetype) initWithRemovedDevice: (AromaService_MobileDevice) removedDevice;

@end

@interface AromaService_RegisterHealthCheckRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_UserToken token;
@property (assign, nonatomic) BOOL tokenIsSet;
- (void) unsetToken;

@property (strong, nonatomic) AromaService_Endpoint endpoint;
@property (assign, nonatomic) BOOL endpointIsSet;
- (void) unsetEndpoint;


- (instancetype) initWithToken: (AromaService_UserToken) token endpoint: (AromaService_Endpoint) endpoint;

@end

@interface AromaService_RegisterHealthCheckResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) NSString * message;
@property (assign, nonatomic) BOOL messageIsSet;
- (void) unsetMessage;

@property (strong, nonatomic) NSString * healthCheckToken;
@property (assign, nonatomic) BOOL healthCheckTokenIsSet;
- (void) unsetHealthCheckToken;


- (instancetype) initWithMessage: (NSString *) message healthCheckToken: (NSString *) healthCheckToken;

@end

@interface AromaService_GetServiceAnnouncementsRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AromaService_UserToken token;
@property (assign, nonatomic) BOOL tokenIsSet;
- (void) unsetToken;


- (instancetype) initWithToken: (AromaService_UserToken) token;

@end

@interface AromaService_GetServiceAnnouncementsResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) NSMutableArray<AromaService_ServiceAnnouncement *> * serviceAnnouncements;
@property (assign, nonatomic) BOOL serviceAnnouncementsIsSet;
- (void) unsetServiceAnnouncements;


- (instancetype) initWithServiceAnnouncements: (NSArray<AromaService_ServiceAnnouncement *> *) serviceAnnouncements;

@end

@protocol AromaService_AromaService <NSObject>
- (AromaService_SignInResponse *) signIn: (AromaService_SignInRequest *) request error: (NSError *__autoreleasing *)__thriftError;  // throws AromaService_OperationFailedException, AromaService_InvalidArgumentException, AromaService_InvalidCredentialsException, AromaService_UserDoesNotExistException, TException
- (AromaService_SignUpResponse *) signUp: (AromaService_SignUpRequest *) request error: (NSError *__autoreleasing *)__thriftError;  // throws AromaService_OperationFailedException, AromaService_InvalidArgumentException, AromaService_InvalidCredentialsException, AromaService_AccountAlreadyExistsException, TException
- (AromaService_GetUserInfoResponse *) getUserInfo: (AromaService_GetUserInfoRequest *) request error: (NSError *__autoreleasing *)__thriftError;  // throws AromaService_OperationFailedException, AromaService_InvalidArgumentException, AromaService_InvalidTokenException, AromaService_UnauthorizedException, AromaService_UserDoesNotExistException, TException
- (AromaService_GetApplicationInfoResponse *) getApplicationInfo: (AromaService_GetApplicationInfoRequest *) request error: (NSError *__autoreleasing *)__thriftError;  // throws AromaService_OperationFailedException, AromaService_InvalidArgumentException, AromaService_InvalidTokenException, AromaService_ApplicationDoesNotExistException, AromaService_UnauthorizedException, TException
- (AromaService_GetApplicationsOwnedByResponse *) getApplicationsOwnedBy: (AromaService_GetApplicationsOwnedByRequest *) request error: (NSError *__autoreleasing *)__thriftError;  // throws AromaService_OperationFailedException, AromaService_InvalidArgumentException, AromaService_InvalidTokenException, TException
- (AromaService_ProvisionApplicationResponse *) provisionApplication: (AromaService_ProvisionApplicationRequest *) request error: (NSError *__autoreleasing *)__thriftError;  // throws AromaService_OperationFailedException, AromaService_InvalidArgumentException, AromaService_InvalidTokenException, AromaService_ApplicationDoesNotExistException, AromaService_UnauthorizedException, TException
- (AromaService_RecreateApplicationTokenResponse *) recreateToken: (AromaService_RecreateApplicationTokenRequest *) request error: (NSError *__autoreleasing *)__thriftError;  // throws AromaService_OperationFailedException, AromaService_InvalidArgumentException, AromaService_InvalidTokenException, AromaService_ApplicationDoesNotExistException, AromaService_UnauthorizedException, TException
- (AromaService_DeleteApplicationResponse *) deleteApplication: (AromaService_DeleteApplicationRequest *) request error: (NSError *__autoreleasing *)__thriftError;  // throws AromaService_OperationFailedException, AromaService_InvalidArgumentException, AromaService_InvalidTokenException, AromaService_ApplicationDoesNotExistException, AromaService_UnauthorizedException, TException
- (AromaService_RenewApplicationTokenResponse *) renewApplicationToken: (AromaService_RenewApplicationTokenRequest *) request error: (NSError *__autoreleasing *)__thriftError;  // throws AromaService_OperationFailedException, AromaService_InvalidArgumentException, AromaService_InvalidTokenException, AromaService_ApplicationDoesNotExistException, AromaService_UnauthorizedException, TException
- (AromaService_UpdateApplicationResponse *) updateApplication: (AromaService_UpdateApplicationRequest *) request error: (NSError *__autoreleasing *)__thriftError;  // throws AromaService_OperationFailedException, AromaService_InvalidArgumentException, AromaService_InvalidTokenException, AromaService_ApplicationDoesNotExistException, AromaService_UnauthorizedException, TException
- (AromaService_SearchForApplicationsResponse *) searchForApplications: (AromaService_SearchForApplicationsRequest *) request error: (NSError *__autoreleasing *)__thriftError;  // throws AromaService_OperationFailedException, AromaService_InvalidArgumentException, AromaService_InvalidTokenException, AromaService_UnauthorizedException, TException
- (AromaService_GetApplicationMessagesResponse *) getApplicationMessages: (AromaService_GetApplicationMessagesRequest *) request error: (NSError *__autoreleasing *)__thriftError;  // throws AromaService_OperationFailedException, AromaService_InvalidArgumentException, AromaService_InvalidTokenException, AromaService_UnauthorizedException, AromaService_ApplicationDoesNotExistException, TException
- (AromaService_GetFullMessageResponse *) getFullMessage: (AromaService_GetFullMessageRequest *) request error: (NSError *__autoreleasing *)__thriftError;  // throws AromaService_OperationFailedException, AromaService_InvalidArgumentException, AromaService_InvalidTokenException, TException
- (AromaService_DeleteMessageResponse *) deleteMessage: (AromaService_DeleteMessageRequest *) request error: (NSError *__autoreleasing *)__thriftError;  // throws AromaService_OperationFailedException, AromaService_InvalidArgumentException, AromaService_InvalidTokenException, AromaService_MessageDoesNotExistException, AromaService_UnauthorizedException, TException
- (AromaService_DismissMessageResponse *) dismissMessage: (AromaService_DismissMessageRequest *) request error: (NSError *__autoreleasing *)__thriftError;  // throws AromaService_OperationFailedException, AromaService_InvalidArgumentException, AromaService_InvalidTokenException, AromaService_MessageDoesNotExistException, AromaService_UnauthorizedException, TException
- (AromaService_GetInboxResponse *) getInbox: (AromaService_GetInboxRequest *) request error: (NSError *__autoreleasing *)__thriftError;  // throws AromaService_OperationFailedException, AromaService_InvalidArgumentException, AromaService_InvalidTokenException, TException
- (AromaService_GetActivityResponse *) getActivity: (AromaService_GetActivityRequest *) request error: (NSError *__autoreleasing *)__thriftError;  // throws AromaService_OperationFailedException, AromaService_InvalidArgumentException, AromaService_InvalidTokenException, TException
- (AromaService_GetReactionsResponse *) getReactions: (AromaService_GetReactionsRequest *) request error: (NSError *__autoreleasing *)__thriftError;  // throws AromaService_OperationFailedException, AromaService_InvalidArgumentException, AromaService_InvalidTokenException, AromaService_ApplicationDoesNotExistException, AromaService_UnauthorizedException, TException
- (AromaService_UpdateReactionsResponse *) updateReactions: (AromaService_UpdateReactionsRequest *) request error: (NSError *__autoreleasing *)__thriftError;  // throws AromaService_OperationFailedException, AromaService_InvalidArgumentException, AromaService_InvalidTokenException, AromaService_ApplicationDoesNotExistException, AromaService_UnauthorizedException, TException
- (AromaService_GetApplicationsFollowedByResponse *) getApplicationsFollowedBy: (AromaService_GetApplicationsFollowedByRequest *) request error: (NSError *__autoreleasing *)__thriftError;  // throws AromaService_OperationFailedException, AromaService_InvalidArgumentException, AromaService_InvalidTokenException, TException
- (AromaService_FollowApplicationResponse *) followApplication: (AromaService_FollowApplicationRequest *) request error: (NSError *__autoreleasing *)__thriftError;  // throws AromaService_OperationFailedException, AromaService_InvalidArgumentException, AromaService_InvalidTokenException, AromaService_ApplicationDoesNotExistException, AromaService_UnauthorizedException, TException
- (AromaService_UnfollowApplicationResponse *) unfollowApplication: (AromaService_UnfollowApplicationRequest *) request error: (NSError *__autoreleasing *)__thriftError;  // throws AromaService_OperationFailedException, AromaService_InvalidArgumentException, AromaService_InvalidTokenException, AromaService_ApplicationDoesNotExistException, AromaService_UnauthorizedException, TException
- (AromaService_CheckIfDeviceIsRegisteredResponse *) checkIfDeviceIsRegistered: (AromaService_CheckIfDeviceIsRegisteredRequest *) request error: (NSError *__autoreleasing *)__thriftError;  // throws AromaService_OperationFailedException, AromaService_InvalidArgumentException, AromaService_InvalidTokenException, AromaService_UnauthorizedException, TException
- (AromaService_GetRegisteredDevicesResponse *) getRegisteredDevices: (AromaService_GetRegisteredDevicesRequest *) request error: (NSError *__autoreleasing *)__thriftError;  // throws AromaService_OperationFailedException, AromaService_InvalidArgumentException, AromaService_InvalidTokenException, AromaService_UnauthorizedException, TException
- (AromaService_RegisterDeviceResponse *) registerDevice: (AromaService_RegisterDeviceRequest *) request error: (NSError *__autoreleasing *)__thriftError;  // throws AromaService_OperationFailedException, AromaService_InvalidArgumentException, AromaService_InvalidTokenException, AromaService_UnauthorizedException, TException
- (AromaService_UnregisterDeviceResponse *) unregisterDevice: (AromaService_UnregisterDeviceRequest *) request error: (NSError *__autoreleasing *)__thriftError;  // throws AromaService_OperationFailedException, AromaService_InvalidArgumentException, AromaService_InvalidTokenException, AromaService_UnauthorizedException, TException
- (AromaService_GetDashboardResponse *) getDashboard: (AromaService_GetDashboardRequest *) request error: (NSError *__autoreleasing *)__thriftError;  // throws AromaService_OperationFailedException, AromaService_InvalidArgumentException, AromaService_InvalidTokenException, TException
- (AromaService_GetBuzzResponse *) getBuzz: (AromaService_GetBuzzRequest *) request error: (NSError *__autoreleasing *)__thriftError;  // throws AromaService_OperationFailedException, AromaService_InvalidArgumentException, AromaService_InvalidTokenException, AromaService_ApplicationDoesNotExistException, AromaService_UnauthorizedException, TException
- (NSNumber *) getApiVersion: (NSError *__autoreleasing *)__thriftError;  // throws TException
- (AromaService_RegisterHealthCheckResponse *) registerHealthCheck: (AromaService_RegisterHealthCheckRequest *) request error: (NSError *__autoreleasing *)__thriftError;  // throws AromaService_OperationFailedException, AromaService_InvalidArgumentException, AromaService_InvalidTokenException, AromaService_ApplicationDoesNotExistException, AromaService_UnauthorizedException, TException
- (AromaService_GetMediaResponse *) getMedia: (AromaService_GetMediaRequest *) request error: (NSError *__autoreleasing *)__thriftError;  // throws AromaService_OperationFailedException, AromaService_InvalidArgumentException, AromaService_InvalidTokenException, AromaService_DoesNotExistException, AromaService_UnauthorizedException, TException
@end

@interface AromaService_AromaServiceClient : TBaseClient <AromaService_AromaService> 
- (id) initWithProtocol: (id <TProtocol>) protocol;
- (id) initWithInProtocol: (id <TProtocol>) inProtocol outProtocol: (id <TProtocol>) outProtocol;
@end

@interface AromaService_AromaServiceProcessor : NSObject <TProcessor> 
- (id) initWithAromaService: (id <AromaService_AromaService>) service;
- (id<AromaService_AromaService>) service;
@end

FOUNDATION_EXPORT NSString *AromaService_AromaServiceErrorDomain;

FOUNDATION_EXPORT SInt32 AromaService_SERVICE_PORT;
FOUNDATION_EXPORT SInt32 AromaService_MAX_PROFILE_PICTURE_SIZE_IN_KILOBYTES;
FOUNDATION_EXPORT SInt32 AromaService_MAX_APPLICATION_ICON_SIZE_IN_KILOBYTES;
FOUNDATION_EXPORT SInt32 AromaService_APPLICATION_NAME_MAX_LENGTH;
FOUNDATION_EXPORT SInt32 AromaService_APPLICATION_MAX_OWNERS;
FOUNDATION_EXPORT SInt32 AromaService_MAX_MESSAGE_LENGTH;
FOUNDATION_EXPORT SInt32 AromaService_MAXIMUM_REACTIONS;

@interface AromaService_AromaServiceConstants : NSObject {
}

+ (AromaEndpoint_TcpEndpoint *) PRODUCTION_ENDPOINT;

+ (AromaEndpoint_TcpEndpoint *) BETA_ENDPOINT;

+ (Aroma_Dimension *) MAX_PROFILE_IMAGE_DIMENSION;

+ (Aroma_LengthOfTime *) DEFAULT_APP_TOKEN_LIFETIME;

+ (Aroma_Dimension *) MAX_APPLICATION_ICON_DIMENSION;

+ (Aroma_LengthOfTime *) DEFAULT_INBOX_LIFETIME;

+ (Aroma_LengthOfTime *) DEFAULT_ACTIVITY_LIFETIME;

@end
