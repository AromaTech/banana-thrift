/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#import <Foundation/Foundation.h>

#import "TProtocol.h"
#import "TProtocolFactory.h"
#import "TApplicationError.h"
#import "TProtocolError.h"
#import "TProtocolUtil.h"
#import "TProcessor.h"
#import "TBase.h"
#import "TAsyncTransport.h"
#import "TBaseClient.h"

#import "AromaAuthentication_Authentication.h"
#import "Aroma_Aroma.h"
#import "AromaEndpoint_Endpoint.h"
#import "AromaException_Exceptions.h"

typedef Aroma_int AuthenticationService_int;

typedef Aroma_long AuthenticationService_long;

typedef Aroma_timestamp AuthenticationService_timestamp;

typedef Aroma_LengthOfTime * AuthenticationService_LengthOfTime;

typedef Aroma_uuid AuthenticationService_uuid;

typedef AromaAuthentication_ApplicationToken * AuthenticationService_ApplicationToken;

typedef AromaAuthentication_AuthenticationToken * AuthenticationService_AuthenticationToken;

typedef AuthenticationService_TokenType AuthenticationService_TokenType;

typedef AromaAuthentication_UserToken * AuthenticationService_UserToken;

typedef AromaException_AccountAlreadyExistsException * AuthenticationService_AccountAlreadyExistsException;

typedef AromaException_InvalidArgumentException * AuthenticationService_InvalidArgumentException;

typedef AromaException_InvalidCredentialsException * AuthenticationService_InvalidCredentialsException;

typedef AromaException_InvalidTokenException * AuthenticationService_InvalidTokenException;

typedef AromaException_OperationFailedException * AuthenticationService_OperationFailedException;

typedef AromaException_UnauthorizedException * AuthenticationService_UnauthorizedException;

@interface AuthenticationService_CreateTokenRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AuthenticationService_uuid ownerId;
@property (assign, nonatomic) BOOL ownerIdIsSet;
- (void) unsetOwnerId;

@property (strong, nonatomic) AuthenticationService_LengthOfTime lifetime;
@property (assign, nonatomic) BOOL lifetimeIsSet;
- (void) unsetLifetime;

@property (assign, nonatomic) AuthenticationService_TokenType desiredTokenType;
@property (assign, nonatomic) BOOL desiredTokenTypeIsSet;
- (void) unsetDesiredTokenType;

@property (strong, nonatomic) NSString * ownerName;
@property (assign, nonatomic) BOOL ownerNameIsSet;
- (void) unsetOwnerName;

@property (strong, nonatomic) AuthenticationService_uuid organizationId;
@property (assign, nonatomic) BOOL organizationIdIsSet;
- (void) unsetOrganizationId;

@property (strong, nonatomic) NSString * organizationName;
@property (assign, nonatomic) BOOL organizationNameIsSet;
- (void) unsetOrganizationName;


- (instancetype) initWithOwnerId: (AuthenticationService_uuid) ownerId lifetime: (AuthenticationService_LengthOfTime) lifetime desiredTokenType: (AuthenticationService_TokenType) desiredTokenType ownerName: (NSString *) ownerName organizationId: (AuthenticationService_uuid) organizationId organizationName: (NSString *) organizationName;

@end

@interface AuthenticationService_CreateTokenResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AuthenticationService_AuthenticationToken token;
@property (assign, nonatomic) BOOL tokenIsSet;
- (void) unsetToken;


- (instancetype) initWithToken: (AuthenticationService_AuthenticationToken) token;

@end

@interface AuthenticationService_GetTokenInfoRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) NSString * tokenId;
@property (assign, nonatomic) BOOL tokenIdIsSet;
- (void) unsetTokenId;

@property (assign, nonatomic) AuthenticationService_TokenType tokenType;
@property (assign, nonatomic) BOOL tokenTypeIsSet;
- (void) unsetTokenType;


- (instancetype) initWithTokenId: (NSString *) tokenId tokenType: (AuthenticationService_TokenType) tokenType;

@end

@interface AuthenticationService_GetTokenInfoResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AuthenticationService_AuthenticationToken token;
@property (assign, nonatomic) BOOL tokenIsSet;
- (void) unsetToken;


- (instancetype) initWithToken: (AuthenticationService_AuthenticationToken) token;

@end

@interface AuthenticationService_InvalidateTokenRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) AuthenticationService_AuthenticationToken token;
@property (assign, nonatomic) BOOL tokenIsSet;
- (void) unsetToken;

@property (strong, nonatomic) NSMutableArray<AuthenticationService_AuthenticationToken> * multipleTokens;
@property (assign, nonatomic) BOOL multipleTokensIsSet;
- (void) unsetMultipleTokens;

@property (strong, nonatomic) AuthenticationService_uuid belongingTo;
@property (assign, nonatomic) BOOL belongingToIsSet;
- (void) unsetBelongingTo;


- (instancetype) initWithToken: (AuthenticationService_AuthenticationToken) token multipleTokens: (NSArray<AuthenticationService_AuthenticationToken> *) multipleTokens belongingTo: (AuthenticationService_uuid) belongingTo;

@end

@interface AuthenticationService_InvalidateTokenResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) NSString * message;
@property (assign, nonatomic) BOOL messageIsSet;
- (void) unsetMessage;


- (instancetype) initWithMessage: (NSString *) message;

@end

@interface AuthenticationService_VerifyTokenRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) NSString * tokenId;
@property (assign, nonatomic) BOOL tokenIdIsSet;
- (void) unsetTokenId;

@property (strong, nonatomic) NSString * ownerId;
@property (assign, nonatomic) BOOL ownerIdIsSet;
- (void) unsetOwnerId;


- (instancetype) initWithTokenId: (NSString *) tokenId ownerId: (NSString *) ownerId;

@end

@interface AuthenticationService_VerifyTokenResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) NSString * message;
@property (assign, nonatomic) BOOL messageIsSet;
- (void) unsetMessage;


- (instancetype) initWithMessage: (NSString *) message;

@end

@protocol AuthenticationService_AuthenticationService <NSObject>
- (NSNumber *) getApiVersion: (NSError *__autoreleasing *)__thriftError;  // throws TException
- (AuthenticationService_CreateTokenResponse *) createToken: (AuthenticationService_CreateTokenRequest *) request error: (NSError *__autoreleasing *)__thriftError;  // throws AuthenticationService_OperationFailedException, AuthenticationService_InvalidArgumentException, TException
- (AuthenticationService_GetTokenInfoResponse *) getTokenInfo: (AuthenticationService_GetTokenInfoRequest *) request error: (NSError *__autoreleasing *)__thriftError;  // throws AuthenticationService_OperationFailedException, AuthenticationService_InvalidTokenException, AuthenticationService_InvalidArgumentException, TException
- (AuthenticationService_InvalidateTokenResponse *) invalidateToken: (AuthenticationService_InvalidateTokenRequest *) request error: (NSError *__autoreleasing *)__thriftError;  // throws AuthenticationService_OperationFailedException, AuthenticationService_InvalidTokenException, AuthenticationService_InvalidArgumentException, TException
- (AuthenticationService_VerifyTokenResponse *) verifyToken: (AuthenticationService_VerifyTokenRequest *) request error: (NSError *__autoreleasing *)__thriftError;  // throws AuthenticationService_OperationFailedException, AuthenticationService_InvalidTokenException, AuthenticationService_InvalidArgumentException, TException
@end

@interface AuthenticationService_AuthenticationServiceClient : TBaseClient <AuthenticationService_AuthenticationService> 
- (id) initWithProtocol: (id <TProtocol>) protocol;
- (id) initWithInProtocol: (id <TProtocol>) inProtocol outProtocol: (id <TProtocol>) outProtocol;
@end

@interface AuthenticationService_AuthenticationServiceProcessor : NSObject <TProcessor> 
- (id) initWithAuthenticationService: (id <AuthenticationService_AuthenticationService>) service;
- (id<AuthenticationService_AuthenticationService>) service;
@end

FOUNDATION_EXPORT NSString *AuthenticationService_AuthenticationServiceErrorDomain;

FOUNDATION_EXPORT SInt32 AuthenticationService_SERVICE_PORT;

@interface AuthenticationService_AuthenticationServiceConstants : NSObject {
}

+ (AromaEndpoint_TcpEndpoint *) PRODUCTION_ENDPOINT;

+ (AromaEndpoint_TcpEndpoint *) BETA_ENDPOINT;

+ (Aroma_LengthOfTime *) DEFAULT_TOKEN_LIFETIME;

@end
