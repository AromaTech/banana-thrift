/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#import <Foundation/Foundation.h>

#import "TProtocol.h"
#import "TApplicationException.h"
#import "TProtocolException.h"
#import "TProtocolUtil.h"
#import "TProcessor.h"
#import "TObjective-C.h"
#import "TBase.h"
#import "TAsyncTransport.h"
#import "TProtocolFactory.h"
#import "TBaseClient.h"

#import "Authentication.h"
#import "Banana.h"

typedef BananaAuthentication_ApplicationToken * BananaNotifications_ApplicationToken;

typedef Banana_int BananaNotifications_int;

typedef Banana_long BananaNotifications_long;

typedef Banana_timestamp BananaNotifications_timestamp;

typedef Banana_User * BananaNotifications_User;

typedef Banana_Application * BananaNotifications_Application;

@interface BananaNotifications_HealthCheckFailed : NSObject <TBase, NSCoding> {
  NSString * __message;
  NSString * __hostname;
  BananaNotifications_Application __application;

  BOOL __message_isset;
  BOOL __hostname_isset;
  BOOL __application_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=message, setter=setMessage:) NSString * message;
@property (nonatomic, retain, getter=hostname, setter=setHostname:) NSString * hostname;
@property (nonatomic, retain, getter=application, setter=setApplication:) BananaNotifications_Application application;
#endif

- (id) init;
- (id) initWithMessage: (NSString *) message hostname: (NSString *) hostname application: (BananaNotifications_Application) application;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) message;
- (void) setMessage: (NSString *) message;
#endif
- (BOOL) messageIsSet;

#if !__has_feature(objc_arc)
- (NSString *) hostname;
- (void) setHostname: (NSString *) hostname;
#endif
- (BOOL) hostnameIsSet;

#if !__has_feature(objc_arc)
- (BananaNotifications_Application) application;
- (void) setApplication: (BananaNotifications_Application) application;
#endif
- (BOOL) applicationIsSet;

@end

@interface BananaNotifications_HealthCheckBackToNormal : NSObject <TBase, NSCoding> {
  NSString * __message;
  BananaNotifications_Application __application;

  BOOL __message_isset;
  BOOL __application_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=message, setter=setMessage:) NSString * message;
@property (nonatomic, retain, getter=application, setter=setApplication:) BananaNotifications_Application application;
#endif

- (id) init;
- (id) initWithMessage: (NSString *) message application: (BananaNotifications_Application) application;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) message;
- (void) setMessage: (NSString *) message;
#endif
- (BOOL) messageIsSet;

#if !__has_feature(objc_arc)
- (BananaNotifications_Application) application;
- (void) setApplication: (BananaNotifications_Application) application;
#endif
- (BOOL) applicationIsSet;

@end

@interface BananaNotifications_ApplicationTokenRenewed : NSObject <TBase, NSCoding> {
  BananaNotifications_User __user;
  BananaNotifications_ApplicationToken __applicationToken;
  BananaNotifications_Application __application;

  BOOL __user_isset;
  BOOL __applicationToken_isset;
  BOOL __application_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=user, setter=setUser:) BananaNotifications_User user;
@property (nonatomic, retain, getter=applicationToken, setter=setApplicationToken:) BananaNotifications_ApplicationToken applicationToken;
@property (nonatomic, retain, getter=application, setter=setApplication:) BananaNotifications_Application application;
#endif

- (id) init;
- (id) initWithUser: (BananaNotifications_User) user applicationToken: (BananaNotifications_ApplicationToken) applicationToken application: (BananaNotifications_Application) application;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (BananaNotifications_User) user;
- (void) setUser: (BananaNotifications_User) user;
#endif
- (BOOL) userIsSet;

#if !__has_feature(objc_arc)
- (BananaNotifications_ApplicationToken) applicationToken;
- (void) setApplicationToken: (BananaNotifications_ApplicationToken) applicationToken;
#endif
- (BOOL) applicationTokenIsSet;

#if !__has_feature(objc_arc)
- (BananaNotifications_Application) application;
- (void) setApplication: (BananaNotifications_Application) application;
#endif
- (BOOL) applicationIsSet;

@end

@interface BananaNotifications_ApplicationTokenRegenerated : NSObject <TBase, NSCoding> {
  BananaNotifications_User __user;
  BananaNotifications_ApplicationToken __applicationToken;
  BananaNotifications_Application __application;

  BOOL __user_isset;
  BOOL __applicationToken_isset;
  BOOL __application_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=user, setter=setUser:) BananaNotifications_User user;
@property (nonatomic, retain, getter=applicationToken, setter=setApplicationToken:) BananaNotifications_ApplicationToken applicationToken;
@property (nonatomic, retain, getter=application, setter=setApplication:) BananaNotifications_Application application;
#endif

- (id) init;
- (id) initWithUser: (BananaNotifications_User) user applicationToken: (BananaNotifications_ApplicationToken) applicationToken application: (BananaNotifications_Application) application;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (BananaNotifications_User) user;
- (void) setUser: (BananaNotifications_User) user;
#endif
- (BOOL) userIsSet;

#if !__has_feature(objc_arc)
- (BananaNotifications_ApplicationToken) applicationToken;
- (void) setApplicationToken: (BananaNotifications_ApplicationToken) applicationToken;
#endif
- (BOOL) applicationTokenIsSet;

#if !__has_feature(objc_arc)
- (BananaNotifications_Application) application;
- (void) setApplication: (BananaNotifications_Application) application;
#endif
- (BOOL) applicationIsSet;

@end

@interface BananaNotifications_ApplicationSentMessage : NSObject <TBase, NSCoding> {
  Banana_Message * __message;
  BananaNotifications_Application __application;

  BOOL __message_isset;
  BOOL __application_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=message, setter=setMessage:) Banana_Message * message;
@property (nonatomic, retain, getter=application, setter=setApplication:) BananaNotifications_Application application;
#endif

- (id) init;
- (id) initWithMessage: (Banana_Message *) message application: (BananaNotifications_Application) application;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (Banana_Message *) message;
- (void) setMessage: (Banana_Message *) message;
#endif
- (BOOL) messageIsSet;

#if !__has_feature(objc_arc)
- (BananaNotifications_Application) application;
- (void) setApplication: (BananaNotifications_Application) application;
#endif
- (BOOL) applicationIsSet;

@end

@interface BananaNotifications_EventType : NSObject <TBase, NSCoding> {
  BananaNotifications_HealthCheckFailed * __healthCheckFailed;
  BananaNotifications_HealthCheckBackToNormal * __healthCheckBackToNormal;
  BananaNotifications_ApplicationTokenRenewed * __applicationTokenRenewed;
  BananaNotifications_ApplicationTokenRegenerated * __applicationTokenRegenerated;
  BananaNotifications_ApplicationSentMessage * __applicationSentMessage;

  BOOL __healthCheckFailed_isset;
  BOOL __healthCheckBackToNormal_isset;
  BOOL __applicationTokenRenewed_isset;
  BOOL __applicationTokenRegenerated_isset;
  BOOL __applicationSentMessage_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=healthCheckFailed, setter=setHealthCheckFailed:) BananaNotifications_HealthCheckFailed * healthCheckFailed;
@property (nonatomic, retain, getter=healthCheckBackToNormal, setter=setHealthCheckBackToNormal:) BananaNotifications_HealthCheckBackToNormal * healthCheckBackToNormal;
@property (nonatomic, retain, getter=applicationTokenRenewed, setter=setApplicationTokenRenewed:) BananaNotifications_ApplicationTokenRenewed * applicationTokenRenewed;
@property (nonatomic, retain, getter=applicationTokenRegenerated, setter=setApplicationTokenRegenerated:) BananaNotifications_ApplicationTokenRegenerated * applicationTokenRegenerated;
@property (nonatomic, retain, getter=applicationSentMessage, setter=setApplicationSentMessage:) BananaNotifications_ApplicationSentMessage * applicationSentMessage;
#endif

- (id) init;
- (id) initWithHealthCheckFailed: (BananaNotifications_HealthCheckFailed *) healthCheckFailed healthCheckBackToNormal: (BananaNotifications_HealthCheckBackToNormal *) healthCheckBackToNormal applicationTokenRenewed: (BananaNotifications_ApplicationTokenRenewed *) applicationTokenRenewed applicationTokenRegenerated: (BananaNotifications_ApplicationTokenRegenerated *) applicationTokenRegenerated applicationSentMessage: (BananaNotifications_ApplicationSentMessage *) applicationSentMessage;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (BananaNotifications_HealthCheckFailed *) healthCheckFailed;
- (void) setHealthCheckFailed: (BananaNotifications_HealthCheckFailed *) healthCheckFailed;
#endif
- (BOOL) healthCheckFailedIsSet;

#if !__has_feature(objc_arc)
- (BananaNotifications_HealthCheckBackToNormal *) healthCheckBackToNormal;
- (void) setHealthCheckBackToNormal: (BananaNotifications_HealthCheckBackToNormal *) healthCheckBackToNormal;
#endif
- (BOOL) healthCheckBackToNormalIsSet;

#if !__has_feature(objc_arc)
- (BananaNotifications_ApplicationTokenRenewed *) applicationTokenRenewed;
- (void) setApplicationTokenRenewed: (BananaNotifications_ApplicationTokenRenewed *) applicationTokenRenewed;
#endif
- (BOOL) applicationTokenRenewedIsSet;

#if !__has_feature(objc_arc)
- (BananaNotifications_ApplicationTokenRegenerated *) applicationTokenRegenerated;
- (void) setApplicationTokenRegenerated: (BananaNotifications_ApplicationTokenRegenerated *) applicationTokenRegenerated;
#endif
- (BOOL) applicationTokenRegeneratedIsSet;

#if !__has_feature(objc_arc)
- (BananaNotifications_ApplicationSentMessage *) applicationSentMessage;
- (void) setApplicationSentMessage: (BananaNotifications_ApplicationSentMessage *) applicationSentMessage;
#endif
- (BOOL) applicationSentMessageIsSet;

@end

@interface BananaNotifications_Event : NSObject <TBase, NSCoding> {
  BananaNotifications_EventType * __eventType;
  BananaNotifications_timestamp __timestamp;

  BOOL __eventType_isset;
  BOOL __timestamp_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=eventType, setter=setEventType:) BananaNotifications_EventType * eventType;
@property (nonatomic, getter=timestamp, setter=setTimestamp:) BananaNotifications_timestamp timestamp;
#endif

- (id) init;
- (id) initWithEventType: (BananaNotifications_EventType *) eventType timestamp: (BananaNotifications_timestamp) timestamp;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (BananaNotifications_EventType *) eventType;
- (void) setEventType: (BananaNotifications_EventType *) eventType;
#endif
- (BOOL) eventTypeIsSet;

#if !__has_feature(objc_arc)
- (BananaNotifications_timestamp) timestamp;
- (void) setTimestamp: (BananaNotifications_timestamp) timestamp;
#endif
- (BOOL) timestampIsSet;

@end

@interface BananaNotifications_NotificationConstants : NSObject {
}
@end
