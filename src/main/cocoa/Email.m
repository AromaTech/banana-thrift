/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#import <Foundation/Foundation.h>

#import "TProtocol.h"
#import "TApplicationException.h"
#import "TProtocolException.h"
#import "TProtocolUtil.h"
#import "TProcessor.h"
#import "TObjective-C.h"
#import "TBase.h"
#import "TAsyncTransport.h"
#import "TProtocolFactory.h"
#import "TBaseClient.h"

#import "Aroma.h"

#import "Email.h"

@implementation AromaEmail_EmailNewRegistration

- (id) init
{
  self = [super init];
#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
#endif
  return self;
}

- (id) initWithInfoOfNewUser: (AromaEmail_User) infoOfNewUser
{
  self = [super init];
  __infoOfNewUser = [infoOfNewUser retain_stub];
  __infoOfNewUser_isset = YES;
  return self;
}

- (id) initWithCoder: (NSCoder *) decoder
{
  self = [super init];
  if ([decoder containsValueForKey: @"infoOfNewUser"])
  {
    __infoOfNewUser = [[decoder decodeObjectForKey: @"infoOfNewUser"] retain_stub];
    __infoOfNewUser_isset = YES;
  }
  return self;
}

- (void) encodeWithCoder: (NSCoder *) encoder
{
  if (__infoOfNewUser_isset)
  {
    [encoder encodeObject: __infoOfNewUser forKey: @"infoOfNewUser"];
  }
}

- (NSUInteger) hash
{
  NSUInteger hash = 17;
  hash = (hash * 31) ^ __infoOfNewUser_isset ? 2654435761 : 0;
  if (__infoOfNewUser_isset)
  {
    hash = (hash * 31) ^ [__infoOfNewUser hash];
  }
  return hash;
}

- (BOOL) isEqual: (id) anObject
{
  if (self == anObject) {
    return YES;
  }
  if (![anObject isKindOfClass:[AromaEmail_EmailNewRegistration class]]) {
    return NO;
  }
  AromaEmail_EmailNewRegistration *other = (AromaEmail_EmailNewRegistration *)anObject;
  if ((__infoOfNewUser_isset != other->__infoOfNewUser_isset) ||
      (__infoOfNewUser_isset && ((__infoOfNewUser || other->__infoOfNewUser) && ![__infoOfNewUser isEqual:other->__infoOfNewUser]))) {
    return NO;
  }
  return YES;
}

- (void) dealloc
{
  [__infoOfNewUser release_stub];
  [super dealloc_stub];
}

- (Aroma_User *) infoOfNewUser {
  return [[__infoOfNewUser retain_stub] autorelease_stub];
}

- (void) setInfoOfNewUser: (Aroma_User *) infoOfNewUser {
  [infoOfNewUser retain_stub];
  [__infoOfNewUser release_stub];
  __infoOfNewUser = infoOfNewUser;
  __infoOfNewUser_isset = YES;
}

- (BOOL) infoOfNewUserIsSet {
  return __infoOfNewUser_isset;
}

- (void) unsetInfoOfNewUser {
  [__infoOfNewUser release_stub];
  __infoOfNewUser = nil;
  __infoOfNewUser_isset = NO;
}

- (void) read: (id <TProtocol>) inProtocol
{
  NSString * fieldName;
  int fieldType;
  int fieldID;

  [inProtocol readStructBeginReturningName: NULL];
  while (true)
  {
    [inProtocol readFieldBeginReturningName: &fieldName type: &fieldType fieldID: &fieldID];
    if (fieldType == TType_STOP) { 
      break;
    }
    switch (fieldID)
    {
      case 1:
        if (fieldType == TType_STRUCT) {
          Aroma_User *fieldValue = [[Aroma_User alloc] init];
          [fieldValue read: inProtocol];
          [self setInfoOfNewUser: fieldValue];
          [fieldValue release_stub];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      default:
        [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        break;
    }
    [inProtocol readFieldEnd];
  }
  [inProtocol readStructEnd];
}

- (void) write: (id <TProtocol>) outProtocol {
  [outProtocol writeStructBeginWithName: @"EmailNewRegistration"];
  if (__infoOfNewUser_isset) {
    if (__infoOfNewUser != nil) {
      [outProtocol writeFieldBeginWithName: @"infoOfNewUser" type: TType_STRUCT fieldID: 1];
      [__infoOfNewUser write: outProtocol];
      [outProtocol writeFieldEnd];
    }
  }
  [outProtocol writeFieldStop];
  [outProtocol writeStructEnd];
}

- (void) validate {
  // check for required fields
}

- (NSString *) description {
  NSMutableString * ms = [NSMutableString stringWithString: @"AromaEmail_EmailNewRegistration("];
  [ms appendString: @"infoOfNewUser:"];
  [ms appendFormat: @"%@", __infoOfNewUser];
  [ms appendString: @")"];
  return [NSString stringWithString: ms];
}

@end

@implementation AromaEmail_EmailMessage

- (id) init
{
  self = [super init];
#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
#endif
  return self;
}

- (id) initWithNewRegistration: (AromaEmail_EmailNewRegistration *) newRegistration
{
  self = [super init];
  __newRegistration = [newRegistration retain_stub];
  __newRegistration_isset = YES;
  return self;
}

- (id) initWithCoder: (NSCoder *) decoder
{
  self = [super init];
  if ([decoder containsValueForKey: @"newRegistration"])
  {
    __newRegistration = [[decoder decodeObjectForKey: @"newRegistration"] retain_stub];
    __newRegistration_isset = YES;
  }
  return self;
}

- (void) encodeWithCoder: (NSCoder *) encoder
{
  if (__newRegistration_isset)
  {
    [encoder encodeObject: __newRegistration forKey: @"newRegistration"];
  }
}

- (NSUInteger) hash
{
  NSUInteger hash = 17;
  hash = (hash * 31) ^ __newRegistration_isset ? 2654435761 : 0;
  if (__newRegistration_isset)
  {
    hash = (hash * 31) ^ [__newRegistration hash];
  }
  return hash;
}

- (BOOL) isEqual: (id) anObject
{
  if (self == anObject) {
    return YES;
  }
  if (![anObject isKindOfClass:[AromaEmail_EmailMessage class]]) {
    return NO;
  }
  AromaEmail_EmailMessage *other = (AromaEmail_EmailMessage *)anObject;
  if ((__newRegistration_isset != other->__newRegistration_isset) ||
      (__newRegistration_isset && ((__newRegistration || other->__newRegistration) && ![__newRegistration isEqual:other->__newRegistration]))) {
    return NO;
  }
  return YES;
}

- (void) dealloc
{
  [__newRegistration release_stub];
  [super dealloc_stub];
}

- (AromaEmail_EmailNewRegistration *) newRegistration {
  return [[__newRegistration retain_stub] autorelease_stub];
}

- (void) setNewRegistration: (AromaEmail_EmailNewRegistration *) newRegistration {
  [newRegistration retain_stub];
  [__newRegistration release_stub];
  __newRegistration = newRegistration;
  __newRegistration_isset = YES;
}

- (BOOL) newRegistrationIsSet {
  return __newRegistration_isset;
}

- (void) unsetNewRegistration {
  [__newRegistration release_stub];
  __newRegistration = nil;
  __newRegistration_isset = NO;
}

- (void) read: (id <TProtocol>) inProtocol
{
  NSString * fieldName;
  int fieldType;
  int fieldID;

  [inProtocol readStructBeginReturningName: NULL];
  while (true)
  {
    [inProtocol readFieldBeginReturningName: &fieldName type: &fieldType fieldID: &fieldID];
    if (fieldType == TType_STOP) { 
      break;
    }
    switch (fieldID)
    {
      case 1:
        if (fieldType == TType_STRUCT) {
          AromaEmail_EmailNewRegistration *fieldValue = [[AromaEmail_EmailNewRegistration alloc] init];
          [fieldValue read: inProtocol];
          [self setNewRegistration: fieldValue];
          [fieldValue release_stub];
        } else { 
          [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        }
        break;
      default:
        [TProtocolUtil skipType: fieldType onProtocol: inProtocol];
        break;
    }
    [inProtocol readFieldEnd];
  }
  [inProtocol readStructEnd];
}

- (void) write: (id <TProtocol>) outProtocol {
  [outProtocol writeStructBeginWithName: @"EmailMessage"];
  if (__newRegistration_isset) {
    if (__newRegistration != nil) {
      [outProtocol writeFieldBeginWithName: @"newRegistration" type: TType_STRUCT fieldID: 1];
      [__newRegistration write: outProtocol];
      [outProtocol writeFieldEnd];
    }
  }
  [outProtocol writeFieldStop];
  [outProtocol writeStructEnd];
}

- (void) validate {
  // check for required fields
}

- (NSString *) description {
  NSMutableString * ms = [NSMutableString stringWithString: @"AromaEmail_EmailMessage("];
  [ms appendString: @"newRegistration:"];
  [ms appendFormat: @"%@", __newRegistration];
  [ms appendString: @")"];
  return [NSString stringWithString: ms];
}

@end


@implementation AromaEmail_EmailConstants
+ (void) initialize {
}
@end

