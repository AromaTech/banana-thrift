/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#import <Foundation/Foundation.h>

#import "TProtocol.h"
#import "TProtocolFactory.h"
#import "TApplicationError.h"
#import "TProtocolError.h"
#import "TProtocolUtil.h"
#import "TProcessor.h"
#import "TBase.h"
#import "TAsyncTransport.h"
#import "TBaseClient.h"

#import "Aroma_Aroma.h"
#import "AromaAuthentication_Authentication.h"

#import "AromaEmail_Email.h"

@implementation AromaEmail_EmailNewApplication

- (instancetype) init
{
  self = [super init];
  if (self)  {
  }
  return self;
}

- (instancetype) initWithCreator: (AromaEmail_User) creator app: (AromaEmail_Application) app appToken: (AromaEmail_ApplicationToken) appToken
{
  self = [super init];
  if (self)  {
    _creator = creator;
    _creatorIsSet = YES;
    _app = app;
    _appIsSet = YES;
    _appToken = appToken;
    _appTokenIsSet = YES;
  }
  return self;
}

- (instancetype) initWithCoder: (NSCoder *) decoder
{
  self = [super init];
  if (self)   {
    if ([decoder containsValueForKey: @"creator"])
    {
      _creator = [decoder decodeObjectForKey: @"creator"];
      _creatorIsSet = YES;
    }
    if ([decoder containsValueForKey: @"app"])
    {
      _app = [decoder decodeObjectForKey: @"app"];
      _appIsSet = YES;
    }
    if ([decoder containsValueForKey: @"appToken"])
    {
      _appToken = [decoder decodeObjectForKey: @"appToken"];
      _appTokenIsSet = YES;
    }
  }
  return self;
}

- (void) encodeWithCoder: (NSCoder *) encoder
{
  if (_creatorIsSet)
  {
    [encoder encodeObject: _creator forKey: @"creator"];
  }
  if (_appIsSet)
  {
    [encoder encodeObject: _app forKey: @"app"];
  }
  if (_appTokenIsSet)
  {
    [encoder encodeObject: _appToken forKey: @"appToken"];
  }
}

- (NSUInteger) hash
{
  NSUInteger hash = 17;
  hash = (hash * 31) ^ _creatorIsSet ? 2654435761 : 0;
  if (_creatorIsSet)
  {
    hash = (hash * 31) ^ [_creator hash];
  }
  hash = (hash * 31) ^ _appIsSet ? 2654435761 : 0;
  if (_appIsSet)
  {
    hash = (hash * 31) ^ [_app hash];
  }
  hash = (hash * 31) ^ _appTokenIsSet ? 2654435761 : 0;
  if (_appTokenIsSet)
  {
    hash = (hash * 31) ^ [_appToken hash];
  }
  return hash;
}

- (BOOL) isEqual: (id) anObject
{
  if (self == anObject) {
    return YES;
  }
  if (![anObject isKindOfClass:[AromaEmail_EmailNewApplication class]]) {
    return NO;
  }
  AromaEmail_EmailNewApplication *other = (AromaEmail_EmailNewApplication *)anObject;
  if ((_creatorIsSet != other->_creatorIsSet) ||
      (_creatorIsSet && ((_creator || other->_creator) && ![_creator isEqual:other->_creator]))) {
    return NO;
  }
  if ((_appIsSet != other->_appIsSet) ||
      (_appIsSet && ((_app || other->_app) && ![_app isEqual:other->_app]))) {
    return NO;
  }
  if ((_appTokenIsSet != other->_appTokenIsSet) ||
      (_appTokenIsSet && ((_appToken || other->_appToken) && ![_appToken isEqual:other->_appToken]))) {
    return NO;
  }
  return YES;
}

- (instancetype) copyWithZone:(NSZone *)zone
{
  AromaEmail_EmailNewApplication * val = [AromaEmail_EmailNewApplication new];
  if (_creatorIsSet)
  {
    val.creator = [self.creator copy];
  }
  if (_appIsSet)
  {
    val.app = [self.app copy];
  }
  if (_appTokenIsSet)
  {
    val.appToken = [self.appToken copy];
  }
  return val;
}

- (void) setCreator: (Aroma_User *) creator {
  _creator = creator;
  _creatorIsSet = YES;
}

- (void) unsetCreator {
  _creator = nil;
  _creatorIsSet = NO;
}

- (void) setApp: (Aroma_Application *) app {
  _app = app;
  _appIsSet = YES;
}

- (void) unsetApp {
  _app = nil;
  _appIsSet = NO;
}

- (void) setAppToken: (AromaAuthentication_ApplicationToken *) appToken {
  _appToken = appToken;
  _appTokenIsSet = YES;
}

- (void) unsetAppToken {
  _appToken = nil;
  _appTokenIsSet = NO;
}

- (BOOL) read: (id <TProtocol>) inProtocol error: (NSError *__autoreleasing *)__thriftError
{
  NSString * fieldName;
  SInt32 fieldType;
  SInt32 fieldID;

  if (![inProtocol readStructBeginReturningName: NULL error: __thriftError]) return NO;
  while (true)
  {
    if (![inProtocol readFieldBeginReturningName: &fieldName type: &fieldType fieldID: &fieldID error: __thriftError]) return NO;
    if (fieldType == TTypeSTOP) { 
      break;
    }
    switch (fieldID)
    {
      case 1:
        if (fieldType == TTypeSTRUCT) {
          Aroma_User *fieldValue = [[Aroma_User alloc] init];
          if (![fieldValue read: inProtocol error: __thriftError]) return NO;
          self.creator = fieldValue;
        } else { 
          if (![TProtocolUtil skipType: fieldType onProtocol: inProtocol error: __thriftError]) return NO;
        }
        break;
      case 2:
        if (fieldType == TTypeSTRUCT) {
          Aroma_Application *fieldValue = [[Aroma_Application alloc] init];
          if (![fieldValue read: inProtocol error: __thriftError]) return NO;
          self.app = fieldValue;
        } else { 
          if (![TProtocolUtil skipType: fieldType onProtocol: inProtocol error: __thriftError]) return NO;
        }
        break;
      case 3:
        if (fieldType == TTypeSTRUCT) {
          AromaAuthentication_ApplicationToken *fieldValue = [[AromaAuthentication_ApplicationToken alloc] init];
          if (![fieldValue read: inProtocol error: __thriftError]) return NO;
          self.appToken = fieldValue;
        } else { 
          if (![TProtocolUtil skipType: fieldType onProtocol: inProtocol error: __thriftError]) return NO;
        }
        break;
      default:
        if (![TProtocolUtil skipType: fieldType onProtocol: inProtocol error: __thriftError]) return NO;
        break;
    }
    if (![inProtocol readFieldEnd: __thriftError]) return NO;
  }
  if (![inProtocol readStructEnd: __thriftError]) return NO;
  return YES;
}

- (BOOL) write: (id <TProtocol>) outProtocol error: (NSError *__autoreleasing *)__thriftError {
  if (![outProtocol writeStructBeginWithName: @"EmailNewApplication" error: __thriftError]) return NO;
  if (_creatorIsSet) {
    if (_creator != nil) {
      if (![outProtocol writeFieldBeginWithName: @"creator" type: TTypeSTRUCT fieldID: 1 error: __thriftError]) return NO;
      if (![_creator write: outProtocol error: __thriftError]) return NO;
      if (![outProtocol writeFieldEnd: __thriftError]) return NO;
    }
  }
  if (_appIsSet) {
    if (_app != nil) {
      if (![outProtocol writeFieldBeginWithName: @"app" type: TTypeSTRUCT fieldID: 2 error: __thriftError]) return NO;
      if (![_app write: outProtocol error: __thriftError]) return NO;
      if (![outProtocol writeFieldEnd: __thriftError]) return NO;
    }
  }
  if (_appTokenIsSet) {
    if (_appToken != nil) {
      if (![outProtocol writeFieldBeginWithName: @"appToken" type: TTypeSTRUCT fieldID: 3 error: __thriftError]) return NO;
      if (![_appToken write: outProtocol error: __thriftError]) return NO;
      if (![outProtocol writeFieldEnd: __thriftError]) return NO;
    }
  }
  if (![outProtocol writeFieldStop: __thriftError]) return NO;
  if (![outProtocol writeStructEnd: __thriftError]) return NO;
  return YES;
}

- (BOOL) validate: (NSError *__autoreleasing *)__thriftError {
  // check for required fields
  return YES;
}

- (NSString *) description {
  NSMutableString * ms = [NSMutableString stringWithString: @"AromaEmail_EmailNewApplication("];
  [ms appendString: @"creator:"];
  [ms appendFormat: @"%@", _creator];
  [ms appendString: @",app:"];
  [ms appendFormat: @"%@", _app];
  [ms appendString: @",appToken:"];
  [ms appendFormat: @"%@", _appToken];
  [ms appendString: @")"];
  return [NSString stringWithString: ms];
}

@end

@implementation AromaEmail_EmailNewUserRegistration

- (instancetype) init
{
  self = [super init];
  if (self)  {
  }
  return self;
}

- (instancetype) initWithInfoOfNewUser: (AromaEmail_User) infoOfNewUser
{
  self = [super init];
  if (self)  {
    _infoOfNewUser = infoOfNewUser;
    _infoOfNewUserIsSet = YES;
  }
  return self;
}

- (instancetype) initWithCoder: (NSCoder *) decoder
{
  self = [super init];
  if (self)   {
    if ([decoder containsValueForKey: @"infoOfNewUser"])
    {
      _infoOfNewUser = [decoder decodeObjectForKey: @"infoOfNewUser"];
      _infoOfNewUserIsSet = YES;
    }
  }
  return self;
}

- (void) encodeWithCoder: (NSCoder *) encoder
{
  if (_infoOfNewUserIsSet)
  {
    [encoder encodeObject: _infoOfNewUser forKey: @"infoOfNewUser"];
  }
}

- (NSUInteger) hash
{
  NSUInteger hash = 17;
  hash = (hash * 31) ^ _infoOfNewUserIsSet ? 2654435761 : 0;
  if (_infoOfNewUserIsSet)
  {
    hash = (hash * 31) ^ [_infoOfNewUser hash];
  }
  return hash;
}

- (BOOL) isEqual: (id) anObject
{
  if (self == anObject) {
    return YES;
  }
  if (![anObject isKindOfClass:[AromaEmail_EmailNewUserRegistration class]]) {
    return NO;
  }
  AromaEmail_EmailNewUserRegistration *other = (AromaEmail_EmailNewUserRegistration *)anObject;
  if ((_infoOfNewUserIsSet != other->_infoOfNewUserIsSet) ||
      (_infoOfNewUserIsSet && ((_infoOfNewUser || other->_infoOfNewUser) && ![_infoOfNewUser isEqual:other->_infoOfNewUser]))) {
    return NO;
  }
  return YES;
}

- (instancetype) copyWithZone:(NSZone *)zone
{
  AromaEmail_EmailNewUserRegistration * val = [AromaEmail_EmailNewUserRegistration new];
  if (_infoOfNewUserIsSet)
  {
    val.infoOfNewUser = [self.infoOfNewUser copy];
  }
  return val;
}

- (void) setInfoOfNewUser: (Aroma_User *) infoOfNewUser {
  _infoOfNewUser = infoOfNewUser;
  _infoOfNewUserIsSet = YES;
}

- (void) unsetInfoOfNewUser {
  _infoOfNewUser = nil;
  _infoOfNewUserIsSet = NO;
}

- (BOOL) read: (id <TProtocol>) inProtocol error: (NSError *__autoreleasing *)__thriftError
{
  NSString * fieldName;
  SInt32 fieldType;
  SInt32 fieldID;

  if (![inProtocol readStructBeginReturningName: NULL error: __thriftError]) return NO;
  while (true)
  {
    if (![inProtocol readFieldBeginReturningName: &fieldName type: &fieldType fieldID: &fieldID error: __thriftError]) return NO;
    if (fieldType == TTypeSTOP) { 
      break;
    }
    switch (fieldID)
    {
      case 1:
        if (fieldType == TTypeSTRUCT) {
          Aroma_User *fieldValue = [[Aroma_User alloc] init];
          if (![fieldValue read: inProtocol error: __thriftError]) return NO;
          self.infoOfNewUser = fieldValue;
        } else { 
          if (![TProtocolUtil skipType: fieldType onProtocol: inProtocol error: __thriftError]) return NO;
        }
        break;
      default:
        if (![TProtocolUtil skipType: fieldType onProtocol: inProtocol error: __thriftError]) return NO;
        break;
    }
    if (![inProtocol readFieldEnd: __thriftError]) return NO;
  }
  if (![inProtocol readStructEnd: __thriftError]) return NO;
  return YES;
}

- (BOOL) write: (id <TProtocol>) outProtocol error: (NSError *__autoreleasing *)__thriftError {
  if (![outProtocol writeStructBeginWithName: @"EmailNewUserRegistration" error: __thriftError]) return NO;
  if (_infoOfNewUserIsSet) {
    if (_infoOfNewUser != nil) {
      if (![outProtocol writeFieldBeginWithName: @"infoOfNewUser" type: TTypeSTRUCT fieldID: 1 error: __thriftError]) return NO;
      if (![_infoOfNewUser write: outProtocol error: __thriftError]) return NO;
      if (![outProtocol writeFieldEnd: __thriftError]) return NO;
    }
  }
  if (![outProtocol writeFieldStop: __thriftError]) return NO;
  if (![outProtocol writeStructEnd: __thriftError]) return NO;
  return YES;
}

- (BOOL) validate: (NSError *__autoreleasing *)__thriftError {
  // check for required fields
  return YES;
}

- (NSString *) description {
  NSMutableString * ms = [NSMutableString stringWithString: @"AromaEmail_EmailNewUserRegistration("];
  [ms appendString: @"infoOfNewUser:"];
  [ms appendFormat: @"%@", _infoOfNewUser];
  [ms appendString: @")"];
  return [NSString stringWithString: ms];
}

@end

@implementation AromaEmail_EmailMessage

- (instancetype) init
{
  self = [super init];
  if (self)  {
  }
  return self;
}

- (instancetype) initWithNewApp: (AromaEmail_EmailNewApplication *) newApp newUser: (AromaEmail_EmailNewUserRegistration *) newUser
{
  self = [super init];
  if (self)  {
    _newApp = newApp;
    _newAppIsSet = YES;
    _newUser = newUser;
    _newUserIsSet = YES;
  }
  return self;
}

- (instancetype) initWithCoder: (NSCoder *) decoder
{
  self = [super init];
  if (self)   {
    if ([decoder containsValueForKey: @"newApp"])
    {
      _newApp = [decoder decodeObjectForKey: @"newApp"];
      _newAppIsSet = YES;
    }
    if ([decoder containsValueForKey: @"newUser"])
    {
      _newUser = [decoder decodeObjectForKey: @"newUser"];
      _newUserIsSet = YES;
    }
  }
  return self;
}

- (void) encodeWithCoder: (NSCoder *) encoder
{
  if (_newAppIsSet)
  {
    [encoder encodeObject: _newApp forKey: @"newApp"];
  }
  if (_newUserIsSet)
  {
    [encoder encodeObject: _newUser forKey: @"newUser"];
  }
}

- (NSUInteger) hash
{
  NSUInteger hash = 17;
  hash = (hash * 31) ^ _newAppIsSet ? 2654435761 : 0;
  if (_newAppIsSet)
  {
    hash = (hash * 31) ^ [_newApp hash];
  }
  hash = (hash * 31) ^ _newUserIsSet ? 2654435761 : 0;
  if (_newUserIsSet)
  {
    hash = (hash * 31) ^ [_newUser hash];
  }
  return hash;
}

- (BOOL) isEqual: (id) anObject
{
  if (self == anObject) {
    return YES;
  }
  if (![anObject isKindOfClass:[AromaEmail_EmailMessage class]]) {
    return NO;
  }
  AromaEmail_EmailMessage *other = (AromaEmail_EmailMessage *)anObject;
  if ((_newAppIsSet != other->_newAppIsSet) ||
      (_newAppIsSet && ((_newApp || other->_newApp) && ![_newApp isEqual:other->_newApp]))) {
    return NO;
  }
  if ((_newUserIsSet != other->_newUserIsSet) ||
      (_newUserIsSet && ((_newUser || other->_newUser) && ![_newUser isEqual:other->_newUser]))) {
    return NO;
  }
  return YES;
}

- (instancetype) copyWithZone:(NSZone *)zone
{
  AromaEmail_EmailMessage * val = [AromaEmail_EmailMessage new];
  if (_newAppIsSet)
  {
    val.newApp = [self.newApp copy];
  }
  if (_newUserIsSet)
  {
    val.newUser = [self.newUser copy];
  }
  return val;
}

- (void) setNewApp: (AromaEmail_EmailNewApplication *) newApp {
  _newApp = newApp;
  _newAppIsSet = YES;
}

- (void) unsetNewApp {
  _newApp = nil;
  _newAppIsSet = NO;
}

- (void) setNewUser: (AromaEmail_EmailNewUserRegistration *) newUser {
  _newUser = newUser;
  _newUserIsSet = YES;
}

- (void) unsetNewUser {
  _newUser = nil;
  _newUserIsSet = NO;
}

- (BOOL) read: (id <TProtocol>) inProtocol error: (NSError *__autoreleasing *)__thriftError
{
  NSString * fieldName;
  SInt32 fieldType;
  SInt32 fieldID;

  if (![inProtocol readStructBeginReturningName: NULL error: __thriftError]) return NO;
  while (true)
  {
    if (![inProtocol readFieldBeginReturningName: &fieldName type: &fieldType fieldID: &fieldID error: __thriftError]) return NO;
    if (fieldType == TTypeSTOP) { 
      break;
    }
    switch (fieldID)
    {
      case 1:
        if (fieldType == TTypeSTRUCT) {
          AromaEmail_EmailNewApplication *fieldValue = [[AromaEmail_EmailNewApplication alloc] init];
          if (![fieldValue read: inProtocol error: __thriftError]) return NO;
          self.newApp = fieldValue;
        } else { 
          if (![TProtocolUtil skipType: fieldType onProtocol: inProtocol error: __thriftError]) return NO;
        }
        break;
      case 2:
        if (fieldType == TTypeSTRUCT) {
          AromaEmail_EmailNewUserRegistration *fieldValue = [[AromaEmail_EmailNewUserRegistration alloc] init];
          if (![fieldValue read: inProtocol error: __thriftError]) return NO;
          self.newUser = fieldValue;
        } else { 
          if (![TProtocolUtil skipType: fieldType onProtocol: inProtocol error: __thriftError]) return NO;
        }
        break;
      default:
        if (![TProtocolUtil skipType: fieldType onProtocol: inProtocol error: __thriftError]) return NO;
        break;
    }
    if (![inProtocol readFieldEnd: __thriftError]) return NO;
  }
  if (![inProtocol readStructEnd: __thriftError]) return NO;
  return YES;
}

- (BOOL) write: (id <TProtocol>) outProtocol error: (NSError *__autoreleasing *)__thriftError {
  if (![outProtocol writeStructBeginWithName: @"EmailMessage" error: __thriftError]) return NO;
  if (_newAppIsSet) {
    if (_newApp != nil) {
      if (![outProtocol writeFieldBeginWithName: @"newApp" type: TTypeSTRUCT fieldID: 1 error: __thriftError]) return NO;
      if (![_newApp write: outProtocol error: __thriftError]) return NO;
      if (![outProtocol writeFieldEnd: __thriftError]) return NO;
    }
  }
  if (_newUserIsSet) {
    if (_newUser != nil) {
      if (![outProtocol writeFieldBeginWithName: @"newUser" type: TTypeSTRUCT fieldID: 2 error: __thriftError]) return NO;
      if (![_newUser write: outProtocol error: __thriftError]) return NO;
      if (![outProtocol writeFieldEnd: __thriftError]) return NO;
    }
  }
  if (![outProtocol writeFieldStop: __thriftError]) return NO;
  if (![outProtocol writeStructEnd: __thriftError]) return NO;
  return YES;
}

- (BOOL) validate: (NSError *__autoreleasing *)__thriftError {
  // check for required fields
  return YES;
}

- (NSString *) description {
  NSMutableString * ms = [NSMutableString stringWithString: @"AromaEmail_EmailMessage("];
  [ms appendString: @"newApp:"];
  [ms appendFormat: @"%@", _newApp];
  [ms appendString: @",newUser:"];
  [ms appendFormat: @"%@", _newUser];
  [ms appendString: @")"];
  return [NSString stringWithString: ms];
}

@end

NSString *AromaEmail_EmailErrorDomain = @"AromaEmail_EmailErrorDomain";


