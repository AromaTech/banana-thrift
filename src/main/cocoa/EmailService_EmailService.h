/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#import <Foundation/Foundation.h>

#import "TProtocol.h"
#import "TProtocolFactory.h"
#import "TApplicationError.h"
#import "TProtocolError.h"
#import "TProtocolUtil.h"
#import "TProcessor.h"
#import "TBase.h"
#import "TAsyncTransport.h"
#import "TBaseClient.h"

#import "AromaAuthentication_Authentication.h"
#import "Aroma_Aroma.h"
#import "AromaChannels_Channels.h"
#import "AromaEndpoint_Endpoint.h"
#import "AromaEmail_Email.h"
#import "AromaException_Exceptions.h"

typedef Aroma_int EmailService_int;

typedef Aroma_long EmailService_long;

typedef Aroma_timestamp EmailService_timestamp;

typedef Aroma_uuid EmailService_uuid;

typedef AromaAuthentication_AuthenticationToken * EmailService_AuthenticationToken;

typedef Aroma_Application * EmailService_Application;

typedef EmailService_Urgency EmailService_Urgency;

typedef Aroma_User * EmailService_User;

typedef AromaChannels_AromaChannel * EmailService_AromaChannel;

typedef AromaEmail_EmailMessage * EmailService_EmailMessage;

typedef AromaException_AccountAlreadyExistsException * EmailService_AccountAlreadyExistsException;

typedef AromaException_InvalidArgumentException * EmailService_InvalidArgumentException;

typedef AromaException_InvalidCredentialsException * EmailService_InvalidCredentialsException;

typedef AromaException_InvalidTokenException * EmailService_InvalidTokenException;

typedef AromaException_OperationFailedException * EmailService_OperationFailedException;

typedef AromaException_ApplicationAlreadyRegisteredException * EmailService_ApplicationAlreadyRegisteredException;

typedef AromaException_ApplicationDoesNotExistException * EmailService_ApplicationDoesNotExistException;

typedef AromaException_CustomChannelUnreachableException * EmailService_CustomChannelUnreachableException;

typedef AromaException_ChannelDoesNotExistException * EmailService_ChannelDoesNotExistException;

typedef AromaException_UnauthorizedException * EmailService_UnauthorizedException;

@interface EmailService_SendEmailRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) EmailService_AuthenticationToken token;
@property (assign, nonatomic) BOOL tokenIsSet;
- (void) unsetToken;

@property (strong, nonatomic) NSString * emailAddress;
@property (assign, nonatomic) BOOL emailAddressIsSet;
- (void) unsetEmailAddress;

@property (strong, nonatomic) EmailService_EmailMessage emailMessage;
@property (assign, nonatomic) BOOL emailMessageIsSet;
- (void) unsetEmailMessage;


- (instancetype) initWithToken: (EmailService_AuthenticationToken) token emailAddress: (NSString *) emailAddress emailMessage: (EmailService_EmailMessage) emailMessage;

@end

@interface EmailService_SendEmailResponse : NSObject <TBase, NSCoding, NSCopying> 



@end

@protocol EmailService_EmailService <NSObject>
- (NSNumber *) getApiVersion: (NSError *__autoreleasing *)__thriftError;  // throws TException
- (EmailService_SendEmailResponse *) sendEmail: (EmailService_SendEmailRequest *) request error: (NSError *__autoreleasing *)__thriftError;  // throws EmailService_InvalidArgumentException, EmailService_OperationFailedException, EmailService_InvalidTokenException, TException
@end

@interface EmailService_EmailServiceClient : TBaseClient <EmailService_EmailService> 
- (id) initWithProtocol: (id <TProtocol>) protocol;
- (id) initWithInProtocol: (id <TProtocol>) inProtocol outProtocol: (id <TProtocol>) outProtocol;
@end

@interface EmailService_EmailServiceProcessor : NSObject <TProcessor> 
- (id) initWithEmailService: (id <EmailService_EmailService>) service;
- (id<EmailService_EmailService>) service;
@end

FOUNDATION_EXPORT NSString *EmailService_EmailServiceErrorDomain;

FOUNDATION_EXPORT SInt32 EmailService_SERVICE_PORT;
FOUNDATION_EXPORT NSString * EmailService_AROMA_EMAIL_ADDRESS;

@interface EmailService_EmailServiceConstants : NSObject {
}

+ (AromaEndpoint_TcpEndpoint *) PRODUCTION_ENDPOINT;

+ (AromaEndpoint_TcpEndpoint *) BETA_ENDPOINT;

@end
