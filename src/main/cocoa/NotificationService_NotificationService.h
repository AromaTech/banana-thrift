/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#import <Foundation/Foundation.h>

#import "TProtocol.h"
#import "TProtocolFactory.h"
#import "TApplicationError.h"
#import "TProtocolError.h"
#import "TProtocolUtil.h"
#import "TProcessor.h"
#import "TBase.h"
#import "TAsyncTransport.h"
#import "TBaseClient.h"

#import "AromaAuthentication_Authentication.h"
#import "Aroma_Aroma.h"
#import "AromaChannels_Channels.h"
#import "AromaEndpoint_Endpoint.h"
#import "AromaEvents_Events.h"
#import "AromaException_Exceptions.h"

typedef Aroma_int NotificationService_int;

typedef Aroma_long NotificationService_long;

typedef Aroma_timestamp NotificationService_timestamp;

typedef Aroma_uuid NotificationService_uuid;

typedef AromaAuthentication_AuthenticationToken * NotificationService_AuthenticationToken;

typedef Aroma_Application * NotificationService_Application;

typedef NotificationService_Urgency NotificationService_Urgency;

typedef Aroma_User * NotificationService_User;

typedef AromaChannels_AromaChannel * NotificationService_AromaChannel;

typedef AromaEvents_Event * NotificationService_Event;

typedef AromaException_AccountAlreadyExistsException * NotificationService_AccountAlreadyExistsException;

typedef AromaException_InvalidArgumentException * NotificationService_InvalidArgumentException;

typedef AromaException_InvalidCredentialsException * NotificationService_InvalidCredentialsException;

typedef AromaException_InvalidTokenException * NotificationService_InvalidTokenException;

typedef AromaException_OperationFailedException * NotificationService_OperationFailedException;

typedef AromaException_ApplicationAlreadyRegisteredException * NotificationService_ApplicationAlreadyRegisteredException;

typedef AromaException_ApplicationDoesNotExistException * NotificationService_ApplicationDoesNotExistException;

typedef AromaException_CustomChannelUnreachableException * NotificationService_CustomChannelUnreachableException;

typedef AromaException_ChannelDoesNotExistException * NotificationService_ChannelDoesNotExistException;

typedef AromaException_UnauthorizedException * NotificationService_UnauthorizedException;

@interface NotificationService_SendNotificationRequest : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) NotificationService_AuthenticationToken token;
@property (assign, nonatomic) BOOL tokenIsSet;
- (void) unsetToken;

@property (strong, nonatomic) NotificationService_Event event;
@property (assign, nonatomic) BOOL eventIsSet;
- (void) unsetEvent;

@property (strong, nonatomic) NSMutableDictionary<NotificationService_AromaChannel, NotificationService_User> * channels;
@property (assign, nonatomic) BOOL channelsIsSet;
- (void) unsetChannels;


- (instancetype) initWithToken: (NotificationService_AuthenticationToken) token event: (NotificationService_Event) event channels: (NSDictionary<NotificationService_AromaChannel, NotificationService_User> *) channels;

@end

@interface NotificationService_SendNotificationResponse : NSObject <TBase, NSCoding, NSCopying> 

@property (strong, nonatomic) NotificationService_uuid notificationId;
@property (assign, nonatomic) BOOL notificationIdIsSet;
- (void) unsetNotificationId;


- (instancetype) initWithNotificationId: (NotificationService_uuid) notificationId;

@end

@protocol NotificationService_NotificationService <NSObject>
- (NSNumber *) getApiVersion: (NSError *__autoreleasing *)__thriftError;  // throws TException
- (NotificationService_SendNotificationResponse *) sendNotification: (NotificationService_SendNotificationRequest *) request error: (NSError *__autoreleasing *)__thriftError;  // throws NotificationService_InvalidArgumentException, NotificationService_OperationFailedException, NotificationService_InvalidTokenException, TException
@end

@interface NotificationService_NotificationServiceClient : TBaseClient <NotificationService_NotificationService> 
- (id) initWithProtocol: (id <TProtocol>) protocol;
- (id) initWithInProtocol: (id <TProtocol>) inProtocol outProtocol: (id <TProtocol>) outProtocol;
@end

@interface NotificationService_NotificationServiceProcessor : NSObject <TProcessor> 
- (id) initWithNotificationService: (id <NotificationService_NotificationService>) service;
- (id<NotificationService_NotificationService>) service;
@end

FOUNDATION_EXPORT NSString *NotificationService_NotificationServiceErrorDomain;

FOUNDATION_EXPORT SInt32 NotificationService_SERVICE_PORT;

@interface NotificationService_NotificationServiceConstants : NSObject {
}

+ (AromaEndpoint_TcpEndpoint *) PRODUCTION_ENDPOINT;

+ (AromaEndpoint_TcpEndpoint *) BETA_ENDPOINT;

@end
