/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#import <Foundation/Foundation.h>

#import "TProtocol.h"
#import "TApplicationException.h"
#import "TProtocolException.h"
#import "TProtocolUtil.h"
#import "TProcessor.h"
#import "TObjective-C.h"
#import "TBase.h"
#import "TAsyncTransport.h"
#import "TProtocolFactory.h"
#import "TBaseClient.h"

#import "Authentication.h"
#import "Banana.h"
#import "Endpoint.h"
#import "Exceptions.h"
#import "MessageService.h"

typedef Banana_int ApplicationService_int;

typedef Banana_long ApplicationService_long;

typedef Banana_timestamp ApplicationService_timestamp;

typedef BananaAuthentication_ApplicationToken * ApplicationService_ApplicationToken;

typedef Banana_Application * ApplicationService_Application;

typedef int ApplicationService_Urgency;

typedef BananaException_AccountAlreadyExistsException * ApplicationService_AccountAlreadyExistsException;

typedef BananaException_InvalidArgumentException * ApplicationService_InvalidArgumentException;

typedef BananaException_InvalidTokenException * ApplicationService_InvalidTokenException;

typedef BananaException_OperationFailedException * ApplicationService_OperationFailedException;

typedef BananaException_ApplicationAlreadyRegisteredException * ApplicationService_ApplicationAlreadyRegisteredException;

typedef BananaException_ApplicationDoesNotExistException * ApplicationService_ApplicationDoesNotExistException;

typedef BananaException_CustomChannelUnreachableException * ApplicationService_CustomChannelUnreachableException;

typedef BananaException_ChannelDoesNotExistException * ApplicationService_ChannelDoesNotExistException;

typedef BananaException_ThroughoutExceededException * ApplicationService_ThroughoutExceededException;

typedef BananaException_UnauthorizedException * ApplicationService_UnauthorizedException;

typedef MessageService_SendMessageRequest * ApplicationService_SendMessageRequest;

typedef MessageService_SendMessageResponse * ApplicationService_SendMessageResponse;

@protocol ApplicationService_ApplicationService <NSObject>
- (double) getApiVersion;  // throws TException
- (ApplicationService_SendMessageResponse) sendMessage: (ApplicationService_SendMessageRequest) request;  // throws ApplicationService_OperationFailedException, ApplicationService_InvalidArgumentException, ApplicationService_InvalidTokenException, ApplicationService_ApplicationDoesNotExistException, ApplicationService_ThroughoutExceededException, TException
- (void) sendMessageAsync: (ApplicationService_SendMessageRequest) request;  // throws TException
@end

@interface ApplicationService_ApplicationServiceClient : TBaseClient <ApplicationService_ApplicationService> - (id) initWithProtocol: (id <TProtocol>) protocol;
- (id) initWithInProtocol: (id <TProtocol>) inProtocol outProtocol: (id <TProtocol>) outProtocol;
@end

@interface ApplicationService_ApplicationServiceProcessor : NSObject <TProcessor> {
  id <ApplicationService_ApplicationService> mService;
  NSDictionary * mMethodMap;
}
- (id) initWithApplicationService: (id <ApplicationService_ApplicationService>) service;
- (id<ApplicationService_ApplicationService>) service;
@end

@interface ApplicationService_ApplicationServiceConstants : NSObject {
}
+ (ApplicationService_int) SERVICE_PORT;
+ (BananaEndpoint_TcpEndpoint *) PRODUCTION_ENDPOINT;
+ (BananaEndpoint_TcpEndpoint *) BETA_ENDPOINT;
@end
