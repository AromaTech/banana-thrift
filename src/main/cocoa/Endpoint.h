/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#import <Foundation/Foundation.h>

#import "TProtocol.h"
#import "TApplicationException.h"
#import "TProtocolException.h"
#import "TProtocolUtil.h"
#import "TProcessor.h"
#import "TObjective-C.h"
#import "TBase.h"
#import "TAsyncTransport.h"
#import "TProtocolFactory.h"
#import "TBaseClient.h"

#import "Authentication.h"
#import "Banana.h"
#import "Exceptions.h"

typedef Banana_int BananaEndpoint_int;

typedef BananaException_OperationFailedException * BananaEndpoint_OperationFailedException;

@interface BananaEndpoint_TcpEndpoint : NSObject <TBase, NSCoding> {
  NSString * __hostname;
  BananaEndpoint_int __port;

  BOOL __hostname_isset;
  BOOL __port_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=hostname, setter=setHostname:) NSString * hostname;
@property (nonatomic, getter=port, setter=setPort:) BananaEndpoint_int port;
#endif

- (id) init;
- (id) initWithHostname: (NSString *) hostname port: (BananaEndpoint_int) port;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) hostname;
- (void) setHostname: (NSString *) hostname;
#endif
- (BOOL) hostnameIsSet;

#if !__has_feature(objc_arc)
- (BananaEndpoint_int) port;
- (void) setPort: (BananaEndpoint_int) port;
#endif
- (BOOL) portIsSet;

@end

@interface BananaEndpoint_HttpThriftEndpoint : NSObject <TBase, NSCoding> {
  NSString * __url;

  BOOL __url_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=url, setter=setUrl:) NSString * url;
#endif

- (id) init;
- (id) initWithUrl: (NSString *) url;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) url;
- (void) setUrl: (NSString *) url;
#endif
- (BOOL) urlIsSet;

@end

@interface BananaEndpoint_HttpRestEndpoint : NSObject <TBase, NSCoding> {
  NSString * __url;

  BOOL __url_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=url, setter=setUrl:) NSString * url;
#endif

- (id) init;
- (id) initWithUrl: (NSString *) url;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) url;
- (void) setUrl: (NSString *) url;
#endif
- (BOOL) urlIsSet;

@end

@interface BananaEndpoint_Endpoint : NSObject <TBase, NSCoding> {
  BananaEndpoint_TcpEndpoint * __tcp;
  BananaEndpoint_HttpThriftEndpoint * __httpThrift;
  BananaEndpoint_HttpRestEndpoint * __httpRest;

  BOOL __tcp_isset;
  BOOL __httpThrift_isset;
  BOOL __httpRest_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=tcp, setter=setTcp:) BananaEndpoint_TcpEndpoint * tcp;
@property (nonatomic, retain, getter=httpThrift, setter=setHttpThrift:) BananaEndpoint_HttpThriftEndpoint * httpThrift;
@property (nonatomic, retain, getter=httpRest, setter=setHttpRest:) BananaEndpoint_HttpRestEndpoint * httpRest;
#endif

- (id) init;
- (id) initWithTcp: (BananaEndpoint_TcpEndpoint *) tcp httpThrift: (BananaEndpoint_HttpThriftEndpoint *) httpThrift httpRest: (BananaEndpoint_HttpRestEndpoint *) httpRest;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (BananaEndpoint_TcpEndpoint *) tcp;
- (void) setTcp: (BananaEndpoint_TcpEndpoint *) tcp;
#endif
- (BOOL) tcpIsSet;

#if !__has_feature(objc_arc)
- (BananaEndpoint_HttpThriftEndpoint *) httpThrift;
- (void) setHttpThrift: (BananaEndpoint_HttpThriftEndpoint *) httpThrift;
#endif
- (BOOL) httpThriftIsSet;

#if !__has_feature(objc_arc)
- (BananaEndpoint_HttpRestEndpoint *) httpRest;
- (void) setHttpRest: (BananaEndpoint_HttpRestEndpoint *) httpRest;
#endif
- (BOOL) httpRestIsSet;

@end

@interface BananaEndpoint_HealthPokeRequest : NSObject <TBase, NSCoding> {
  NSString * __applicationName;
  BananaAuthentication_ApplicationToken * __serviceToken;

  BOOL __applicationName_isset;
  BOOL __serviceToken_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=applicationName, setter=setApplicationName:) NSString * applicationName;
@property (nonatomic, retain, getter=serviceToken, setter=setServiceToken:) BananaAuthentication_ApplicationToken * serviceToken;
#endif

- (id) init;
- (id) initWithApplicationName: (NSString *) applicationName serviceToken: (BananaAuthentication_ApplicationToken *) serviceToken;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) applicationName;
- (void) setApplicationName: (NSString *) applicationName;
#endif
- (BOOL) applicationNameIsSet;

#if !__has_feature(objc_arc)
- (BananaAuthentication_ApplicationToken *) serviceToken;
- (void) setServiceToken: (BananaAuthentication_ApplicationToken *) serviceToken;
#endif
- (BOOL) serviceTokenIsSet;

@end

@interface BananaEndpoint_HealthPokeResponse : NSObject <TBase, NSCoding> {
  NSString * __message;
  BOOL __healthy;

  BOOL __message_isset;
  BOOL __healthy_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=message, setter=setMessage:) NSString * message;
@property (nonatomic, getter=healthy, setter=setHealthy:) BOOL healthy;
#endif

- (id) init;
- (id) initWithMessage: (NSString *) message healthy: (BOOL) healthy;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) message;
- (void) setMessage: (NSString *) message;
#endif
- (BOOL) messageIsSet;

#if !__has_feature(objc_arc)
- (BOOL) healthy;
- (void) setHealthy: (BOOL) healthy;
#endif
- (BOOL) healthyIsSet;

@end

@protocol BananaEndpoint_ApplicationEndpoint <NSObject>
- (BananaEndpoint_HealthPokeResponse *) healthPoke: (BananaEndpoint_HealthPokeRequest *) request;  // throws BananaEndpoint_OperationFailedException, TException
@end

@interface BananaEndpoint_ApplicationEndpointClient : TBaseClient <BananaEndpoint_ApplicationEndpoint> - (id) initWithProtocol: (id <TProtocol>) protocol;
- (id) initWithInProtocol: (id <TProtocol>) inProtocol outProtocol: (id <TProtocol>) outProtocol;
@end

@interface BananaEndpoint_ApplicationEndpointProcessor : NSObject <TProcessor> {
  id <BananaEndpoint_ApplicationEndpoint> mService;
  NSDictionary * mMethodMap;
}
- (id) initWithApplicationEndpoint: (id <BananaEndpoint_ApplicationEndpoint>) service;
- (id<BananaEndpoint_ApplicationEndpoint>) service;
@end

@interface BananaEndpoint_EndpointConstants : NSObject {
}
@end
