/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#import <Foundation/Foundation.h>

#import "TProtocol.h"
#import "TApplicationException.h"
#import "TProtocolException.h"
#import "TProtocolUtil.h"
#import "TProcessor.h"
#import "TObjective-C.h"
#import "TBase.h"
#import "TAsyncTransport.h"
#import "TProtocolFactory.h"
#import "TBaseClient.h"

#import "Aroma.h"

typedef Aroma_int AromaReactions_int;

typedef Aroma_long AromaReactions_long;

typedef Aroma_timestamp AromaReactions_timestamp;

typedef Aroma_uuid AromaReactions_uuid;

@interface AromaReactions_MatcherAll : NSObject <TBase, NSCoding> {
}

- (id) init;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

@end

@interface AromaReactions_MatcherTitleIs : NSObject <TBase, NSCoding> {
  NSString * __expectedTitle;

  BOOL __expectedTitle_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=expectedTitle, setter=setExpectedTitle:) NSString * expectedTitle;
#endif

- (id) init;
- (id) initWithExpectedTitle: (NSString *) expectedTitle;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) expectedTitle;
- (void) setExpectedTitle: (NSString *) expectedTitle;
#endif
- (BOOL) expectedTitleIsSet;

@end

@interface AromaReactions_MatcherTitleIsNot : NSObject <TBase, NSCoding> {
  NSString * __title;

  BOOL __title_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=title, setter=setTitle:) NSString * title;
#endif

- (id) init;
- (id) initWithTitle: (NSString *) title;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) title;
- (void) setTitle: (NSString *) title;
#endif
- (BOOL) titleIsSet;

@end

@interface AromaReactions_MatcherTitleContains : NSObject <TBase, NSCoding> {
  NSString * __substring;

  BOOL __substring_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=substring, setter=setSubstring:) NSString * substring;
#endif

- (id) init;
- (id) initWithSubstring: (NSString *) substring;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) substring;
- (void) setSubstring: (NSString *) substring;
#endif
- (BOOL) substringIsSet;

@end

@interface AromaReactions_MatcherTitleDoesNotContain : NSObject <TBase, NSCoding> {
  NSString * __substring;

  BOOL __substring_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=substring, setter=setSubstring:) NSString * substring;
#endif

- (id) init;
- (id) initWithSubstring: (NSString *) substring;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) substring;
- (void) setSubstring: (NSString *) substring;
#endif
- (BOOL) substringIsSet;

@end

@interface AromaReactions_MatcherBodyIs : NSObject <TBase, NSCoding> {
  NSString * __expectedBody;

  BOOL __expectedBody_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=expectedBody, setter=setExpectedBody:) NSString * expectedBody;
#endif

- (id) init;
- (id) initWithExpectedBody: (NSString *) expectedBody;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) expectedBody;
- (void) setExpectedBody: (NSString *) expectedBody;
#endif
- (BOOL) expectedBodyIsSet;

@end

@interface AromaReactions_MatcherBodyContains : NSObject <TBase, NSCoding> {
  NSString * __substring;

  BOOL __substring_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=substring, setter=setSubstring:) NSString * substring;
#endif

- (id) init;
- (id) initWithSubstring: (NSString *) substring;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) substring;
- (void) setSubstring: (NSString *) substring;
#endif
- (BOOL) substringIsSet;

@end

@interface AromaReactions_MatcherBodyDoesNotContain : NSObject <TBase, NSCoding> {
  NSString * __substring;

  BOOL __substring_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=substring, setter=setSubstring:) NSString * substring;
#endif

- (id) init;
- (id) initWithSubstring: (NSString *) substring;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) substring;
- (void) setSubstring: (NSString *) substring;
#endif
- (BOOL) substringIsSet;

@end

@interface AromaReactions_MatcherUrgencyIs : NSObject <TBase, NSCoding> {
  int __urgency;
  NSMutableArray * __urgencies;

  BOOL __urgency_isset;
  BOOL __urgencies_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=urgency, setter=setUrgency:) int urgency;
@property (nonatomic, retain, getter=urgencies, setter=setUrgencies:) NSMutableArray * urgencies;
#endif

- (id) init;
- (id) initWithUrgency: (int) urgency urgencies: (NSMutableArray *) urgencies;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int) urgency;
- (void) setUrgency: (int) urgency;
#endif
- (BOOL) urgencyIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) urgencies;
- (void) setUrgencies: (NSMutableArray *) urgencies;
#endif
- (BOOL) urgenciesIsSet;

@end

@interface AromaReactions_MatcherHostnameIs : NSObject <TBase, NSCoding> {
  NSString * __expectedHostname;

  BOOL __expectedHostname_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=expectedHostname, setter=setExpectedHostname:) NSString * expectedHostname;
#endif

- (id) init;
- (id) initWithExpectedHostname: (NSString *) expectedHostname;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) expectedHostname;
- (void) setExpectedHostname: (NSString *) expectedHostname;
#endif
- (BOOL) expectedHostnameIsSet;

@end

@interface AromaReactions_MatcherHostnameContains : NSObject <TBase, NSCoding> {
  NSString * __substring;

  BOOL __substring_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=substring, setter=setSubstring:) NSString * substring;
#endif

- (id) init;
- (id) initWithSubstring: (NSString *) substring;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) substring;
- (void) setSubstring: (NSString *) substring;
#endif
- (BOOL) substringIsSet;

@end

@interface AromaReactions_MatcherHostnameDoesNotContain : NSObject <TBase, NSCoding> {
  NSString * __substring;

  BOOL __substring_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=substring, setter=setSubstring:) NSString * substring;
#endif

- (id) init;
- (id) initWithSubstring: (NSString *) substring;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) substring;
- (void) setSubstring: (NSString *) substring;
#endif
- (BOOL) substringIsSet;

@end

@interface AromaReactions_AromaMatcher : NSObject <TBase, NSCoding> {
  AromaReactions_MatcherAll * __all;
  AromaReactions_MatcherTitleIs * __titleIs;
  AromaReactions_MatcherTitleIsNot * __titleIsNot;
  AromaReactions_MatcherTitleContains * __titleContains;
  AromaReactions_MatcherTitleDoesNotContain * __titleDoesNotContain;
  AromaReactions_MatcherBodyIs * __bodyIs;
  AromaReactions_MatcherBodyContains * __bodyContains;
  AromaReactions_MatcherBodyDoesNotContain * __bodyDoesNotContain;
  AromaReactions_MatcherUrgencyIs * __urgencyEquals;
  AromaReactions_MatcherHostnameIs * __hostnameIs;
  AromaReactions_MatcherHostnameContains * __hostnameContains;
  AromaReactions_MatcherHostnameDoesNotContain * __hostnameDoesNotContain;

  BOOL __all_isset;
  BOOL __titleIs_isset;
  BOOL __titleIsNot_isset;
  BOOL __titleContains_isset;
  BOOL __titleDoesNotContain_isset;
  BOOL __bodyIs_isset;
  BOOL __bodyContains_isset;
  BOOL __bodyDoesNotContain_isset;
  BOOL __urgencyEquals_isset;
  BOOL __hostnameIs_isset;
  BOOL __hostnameContains_isset;
  BOOL __hostnameDoesNotContain_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=all, setter=setAll:) AromaReactions_MatcherAll * all;
@property (nonatomic, retain, getter=titleIs, setter=setTitleIs:) AromaReactions_MatcherTitleIs * titleIs;
@property (nonatomic, retain, getter=titleIsNot, setter=setTitleIsNot:) AromaReactions_MatcherTitleIsNot * titleIsNot;
@property (nonatomic, retain, getter=titleContains, setter=setTitleContains:) AromaReactions_MatcherTitleContains * titleContains;
@property (nonatomic, retain, getter=titleDoesNotContain, setter=setTitleDoesNotContain:) AromaReactions_MatcherTitleDoesNotContain * titleDoesNotContain;
@property (nonatomic, retain, getter=bodyIs, setter=setBodyIs:) AromaReactions_MatcherBodyIs * bodyIs;
@property (nonatomic, retain, getter=bodyContains, setter=setBodyContains:) AromaReactions_MatcherBodyContains * bodyContains;
@property (nonatomic, retain, getter=bodyDoesNotContain, setter=setBodyDoesNotContain:) AromaReactions_MatcherBodyDoesNotContain * bodyDoesNotContain;
@property (nonatomic, retain, getter=urgencyEquals, setter=setUrgencyEquals:) AromaReactions_MatcherUrgencyIs * urgencyEquals;
@property (nonatomic, retain, getter=hostnameIs, setter=setHostnameIs:) AromaReactions_MatcherHostnameIs * hostnameIs;
@property (nonatomic, retain, getter=hostnameContains, setter=setHostnameContains:) AromaReactions_MatcherHostnameContains * hostnameContains;
@property (nonatomic, retain, getter=hostnameDoesNotContain, setter=setHostnameDoesNotContain:) AromaReactions_MatcherHostnameDoesNotContain * hostnameDoesNotContain;
#endif

- (id) init;
- (id) initWithAll: (AromaReactions_MatcherAll *) all titleIs: (AromaReactions_MatcherTitleIs *) titleIs titleIsNot: (AromaReactions_MatcherTitleIsNot *) titleIsNot titleContains: (AromaReactions_MatcherTitleContains *) titleContains titleDoesNotContain: (AromaReactions_MatcherTitleDoesNotContain *) titleDoesNotContain bodyIs: (AromaReactions_MatcherBodyIs *) bodyIs bodyContains: (AromaReactions_MatcherBodyContains *) bodyContains bodyDoesNotContain: (AromaReactions_MatcherBodyDoesNotContain *) bodyDoesNotContain urgencyEquals: (AromaReactions_MatcherUrgencyIs *) urgencyEquals hostnameIs: (AromaReactions_MatcherHostnameIs *) hostnameIs hostnameContains: (AromaReactions_MatcherHostnameContains *) hostnameContains hostnameDoesNotContain: (AromaReactions_MatcherHostnameDoesNotContain *) hostnameDoesNotContain;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (AromaReactions_MatcherAll *) all;
- (void) setAll: (AromaReactions_MatcherAll *) all;
#endif
- (BOOL) allIsSet;

#if !__has_feature(objc_arc)
- (AromaReactions_MatcherTitleIs *) titleIs;
- (void) setTitleIs: (AromaReactions_MatcherTitleIs *) titleIs;
#endif
- (BOOL) titleIsIsSet;

#if !__has_feature(objc_arc)
- (AromaReactions_MatcherTitleIsNot *) titleIsNot;
- (void) setTitleIsNot: (AromaReactions_MatcherTitleIsNot *) titleIsNot;
#endif
- (BOOL) titleIsNotIsSet;

#if !__has_feature(objc_arc)
- (AromaReactions_MatcherTitleContains *) titleContains;
- (void) setTitleContains: (AromaReactions_MatcherTitleContains *) titleContains;
#endif
- (BOOL) titleContainsIsSet;

#if !__has_feature(objc_arc)
- (AromaReactions_MatcherTitleDoesNotContain *) titleDoesNotContain;
- (void) setTitleDoesNotContain: (AromaReactions_MatcherTitleDoesNotContain *) titleDoesNotContain;
#endif
- (BOOL) titleDoesNotContainIsSet;

#if !__has_feature(objc_arc)
- (AromaReactions_MatcherBodyIs *) bodyIs;
- (void) setBodyIs: (AromaReactions_MatcherBodyIs *) bodyIs;
#endif
- (BOOL) bodyIsIsSet;

#if !__has_feature(objc_arc)
- (AromaReactions_MatcherBodyContains *) bodyContains;
- (void) setBodyContains: (AromaReactions_MatcherBodyContains *) bodyContains;
#endif
- (BOOL) bodyContainsIsSet;

#if !__has_feature(objc_arc)
- (AromaReactions_MatcherBodyDoesNotContain *) bodyDoesNotContain;
- (void) setBodyDoesNotContain: (AromaReactions_MatcherBodyDoesNotContain *) bodyDoesNotContain;
#endif
- (BOOL) bodyDoesNotContainIsSet;

#if !__has_feature(objc_arc)
- (AromaReactions_MatcherUrgencyIs *) urgencyEquals;
- (void) setUrgencyEquals: (AromaReactions_MatcherUrgencyIs *) urgencyEquals;
#endif
- (BOOL) urgencyEqualsIsSet;

#if !__has_feature(objc_arc)
- (AromaReactions_MatcherHostnameIs *) hostnameIs;
- (void) setHostnameIs: (AromaReactions_MatcherHostnameIs *) hostnameIs;
#endif
- (BOOL) hostnameIsIsSet;

#if !__has_feature(objc_arc)
- (AromaReactions_MatcherHostnameContains *) hostnameContains;
- (void) setHostnameContains: (AromaReactions_MatcherHostnameContains *) hostnameContains;
#endif
- (BOOL) hostnameContainsIsSet;

#if !__has_feature(objc_arc)
- (AromaReactions_MatcherHostnameDoesNotContain *) hostnameDoesNotContain;
- (void) setHostnameDoesNotContain: (AromaReactions_MatcherHostnameDoesNotContain *) hostnameDoesNotContain;
#endif
- (BOOL) hostnameDoesNotContainIsSet;

@end

@interface AromaReactions_ActionForwardToSlackChannel : NSObject <TBase, NSCoding> {
  NSString * __slackChannel;
  BOOL __includeBody;

  BOOL __slackChannel_isset;
  BOOL __includeBody_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=slackChannel, setter=setSlackChannel:) NSString * slackChannel;
@property (nonatomic, getter=includeBody, setter=setIncludeBody:) BOOL includeBody;
#endif

- (id) init;
- (id) initWithSlackChannel: (NSString *) slackChannel includeBody: (BOOL) includeBody;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) slackChannel;
- (void) setSlackChannel: (NSString *) slackChannel;
#endif
- (BOOL) slackChannelIsSet;

#if !__has_feature(objc_arc)
- (BOOL) includeBody;
- (void) setIncludeBody: (BOOL) includeBody;
#endif
- (BOOL) includeBodyIsSet;

@end

@interface AromaReactions_ActionForwardToSlackUser : NSObject <TBase, NSCoding> {
  NSString * __slackUsername;
  BOOL __includeBody;

  BOOL __slackUsername_isset;
  BOOL __includeBody_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=slackUsername, setter=setSlackUsername:) NSString * slackUsername;
@property (nonatomic, getter=includeBody, setter=setIncludeBody:) BOOL includeBody;
#endif

- (id) init;
- (id) initWithSlackUsername: (NSString *) slackUsername includeBody: (BOOL) includeBody;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) slackUsername;
- (void) setSlackUsername: (NSString *) slackUsername;
#endif
- (BOOL) slackUsernameIsSet;

#if !__has_feature(objc_arc)
- (BOOL) includeBody;
- (void) setIncludeBody: (BOOL) includeBody;
#endif
- (BOOL) includeBodyIsSet;

@end

@interface AromaReactions_ActionSendEmail : NSObject <TBase, NSCoding> {
  NSString * __emailAddress;
  BOOL __includeBody;

  BOOL __emailAddress_isset;
  BOOL __includeBody_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=emailAddress, setter=setEmailAddress:) NSString * emailAddress;
@property (nonatomic, getter=includeBody, setter=setIncludeBody:) BOOL includeBody;
#endif

- (id) init;
- (id) initWithEmailAddress: (NSString *) emailAddress includeBody: (BOOL) includeBody;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) emailAddress;
- (void) setEmailAddress: (NSString *) emailAddress;
#endif
- (BOOL) emailAddressIsSet;

#if !__has_feature(objc_arc)
- (BOOL) includeBody;
- (void) setIncludeBody: (BOOL) includeBody;
#endif
- (BOOL) includeBodyIsSet;

@end

@interface AromaReactions_ActionSkipInbox : NSObject <TBase, NSCoding> {
}

- (id) init;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

@end

@interface AromaReactions_ActionDeleteMessage : NSObject <TBase, NSCoding> {
}

- (id) init;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

@end

@interface AromaReactions_ActionRespondToCode : NSObject <TBase, NSCoding> {
  NSString * __messageToSend;

  BOOL __messageToSend_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=messageToSend, setter=setMessageToSend:) NSString * messageToSend;
#endif

- (id) init;
- (id) initWithMessageToSend: (NSString *) messageToSend;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) messageToSend;
- (void) setMessageToSend: (NSString *) messageToSend;
#endif
- (BOOL) messageToSendIsSet;

@end

@interface AromaReactions_ActionForwardToUsers : NSObject <TBase, NSCoding> {
  NSMutableArray * __userIds;

  BOOL __userIds_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=userIds, setter=setUserIds:) NSMutableArray * userIds;
#endif

- (id) init;
- (id) initWithUserIds: (NSMutableArray *) userIds;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSMutableArray *) userIds;
- (void) setUserIds: (NSMutableArray *) userIds;
#endif
- (BOOL) userIdsIsSet;

@end

@interface AromaReactions_AromaAction : NSObject <TBase, NSCoding> {
  AromaReactions_ActionForwardToSlackChannel * __forwardToSlackChannel;
  AromaReactions_ActionForwardToSlackUser * __forwardToSlackUser;
  AromaReactions_ActionSendEmail * __sendEmail;
  AromaReactions_ActionSkipInbox * __skipInbox;
  AromaReactions_ActionDeleteMessage * __deleteMessage;
  AromaReactions_ActionRespondToCode * __respondToCode;
  AromaReactions_ActionForwardToUsers * __forwardToUsers;

  BOOL __forwardToSlackChannel_isset;
  BOOL __forwardToSlackUser_isset;
  BOOL __sendEmail_isset;
  BOOL __skipInbox_isset;
  BOOL __deleteMessage_isset;
  BOOL __respondToCode_isset;
  BOOL __forwardToUsers_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=forwardToSlackChannel, setter=setForwardToSlackChannel:) AromaReactions_ActionForwardToSlackChannel * forwardToSlackChannel;
@property (nonatomic, retain, getter=forwardToSlackUser, setter=setForwardToSlackUser:) AromaReactions_ActionForwardToSlackUser * forwardToSlackUser;
@property (nonatomic, retain, getter=sendEmail, setter=setSendEmail:) AromaReactions_ActionSendEmail * sendEmail;
@property (nonatomic, retain, getter=skipInbox, setter=setSkipInbox:) AromaReactions_ActionSkipInbox * skipInbox;
@property (nonatomic, retain, getter=deleteMessage, setter=setDeleteMessage:) AromaReactions_ActionDeleteMessage * deleteMessage;
@property (nonatomic, retain, getter=respondToCode, setter=setRespondToCode:) AromaReactions_ActionRespondToCode * respondToCode;
@property (nonatomic, retain, getter=forwardToUsers, setter=setForwardToUsers:) AromaReactions_ActionForwardToUsers * forwardToUsers;
#endif

- (id) init;
- (id) initWithForwardToSlackChannel: (AromaReactions_ActionForwardToSlackChannel *) forwardToSlackChannel forwardToSlackUser: (AromaReactions_ActionForwardToSlackUser *) forwardToSlackUser sendEmail: (AromaReactions_ActionSendEmail *) sendEmail skipInbox: (AromaReactions_ActionSkipInbox *) skipInbox deleteMessage: (AromaReactions_ActionDeleteMessage *) deleteMessage respondToCode: (AromaReactions_ActionRespondToCode *) respondToCode forwardToUsers: (AromaReactions_ActionForwardToUsers *) forwardToUsers;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (AromaReactions_ActionForwardToSlackChannel *) forwardToSlackChannel;
- (void) setForwardToSlackChannel: (AromaReactions_ActionForwardToSlackChannel *) forwardToSlackChannel;
#endif
- (BOOL) forwardToSlackChannelIsSet;

#if !__has_feature(objc_arc)
- (AromaReactions_ActionForwardToSlackUser *) forwardToSlackUser;
- (void) setForwardToSlackUser: (AromaReactions_ActionForwardToSlackUser *) forwardToSlackUser;
#endif
- (BOOL) forwardToSlackUserIsSet;

#if !__has_feature(objc_arc)
- (AromaReactions_ActionSendEmail *) sendEmail;
- (void) setSendEmail: (AromaReactions_ActionSendEmail *) sendEmail;
#endif
- (BOOL) sendEmailIsSet;

#if !__has_feature(objc_arc)
- (AromaReactions_ActionSkipInbox *) skipInbox;
- (void) setSkipInbox: (AromaReactions_ActionSkipInbox *) skipInbox;
#endif
- (BOOL) skipInboxIsSet;

#if !__has_feature(objc_arc)
- (AromaReactions_ActionDeleteMessage *) deleteMessage;
- (void) setDeleteMessage: (AromaReactions_ActionDeleteMessage *) deleteMessage;
#endif
- (BOOL) deleteMessageIsSet;

#if !__has_feature(objc_arc)
- (AromaReactions_ActionRespondToCode *) respondToCode;
- (void) setRespondToCode: (AromaReactions_ActionRespondToCode *) respondToCode;
#endif
- (BOOL) respondToCodeIsSet;

#if !__has_feature(objc_arc)
- (AromaReactions_ActionForwardToUsers *) forwardToUsers;
- (void) setForwardToUsers: (AromaReactions_ActionForwardToUsers *) forwardToUsers;
#endif
- (BOOL) forwardToUsersIsSet;

@end

@interface AromaReactions_Reaction : NSObject <TBase, NSCoding> {
  AromaReactions_AromaMatcher * __matcher;
  AromaReactions_AromaAction * __action;
  NSString * __name;

  BOOL __matcher_isset;
  BOOL __action_isset;
  BOOL __name_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=matcher, setter=setMatcher:) AromaReactions_AromaMatcher * matcher;
@property (nonatomic, retain, getter=action, setter=setAction:) AromaReactions_AromaAction * action;
@property (nonatomic, retain, getter=name, setter=setName:) NSString * name;
#endif

- (id) init;
- (id) initWithMatcher: (AromaReactions_AromaMatcher *) matcher action: (AromaReactions_AromaAction *) action name: (NSString *) name;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (AromaReactions_AromaMatcher *) matcher;
- (void) setMatcher: (AromaReactions_AromaMatcher *) matcher;
#endif
- (BOOL) matcherIsSet;

#if !__has_feature(objc_arc)
- (AromaReactions_AromaAction *) action;
- (void) setAction: (AromaReactions_AromaAction *) action;
#endif
- (BOOL) actionIsSet;

#if !__has_feature(objc_arc)
- (NSString *) name;
- (void) setName: (NSString *) name;
#endif
- (BOOL) nameIsSet;

@end

@interface AromaReactions_ReactionsConstants : NSObject {
}
@end
