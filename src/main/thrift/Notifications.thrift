namespace java  tech.aroma.banana.thrift.notifications
namespace cocoa BananaNotifications_
namespace cpp   aroma.banana.thrift.notifications

/*
 * Defined in this File are the Banana Service Notifications
 * and Event types that can be sent to a Human.
 */

include "Authentication.thrift"
include "Banana.thrift"

typedef Authentication.ApplicationToken ApplicationToken

typedef Banana.int int;
typedef Banana.long long;
typedef Banana.timestamp timestamp;
typedef Banana.Human Human
typedef Banana.Application Application

/**
 * A Health Poke returned a failure.
 */
struct HealthCheckFailed
{
    1: optional string message;
    /** May include the name of the host that went down. */
    2: optional string hostname;
    /** The application that failed the healthy check. */
    3: Application application;
}

/**
 * An Application that was previously unhealthy
 * is now healthy.
 */
struct HealthCheckBackToNormal
{
    1: optional string message;
    2: Application application;
}

/**
 * An Application's Token has been renewed.
 */
struct ApplicationTokenRenewed
{
    /** The human who performed the action. */
    1: Human human;
    /** We may or may not include the new Application Token, for security reasons. */
    2: optional ApplicationToken applicationToken;
    3: optional Application application;
}

/**
 * An Application Token has been regenerated by someone,
 * likely because the original one was lost, compromised, or forgotten.
 */
struct ApplicationTokenRegenerated
{
    /** The person who performed the action. */
    1: Human human;
    2: optional ApplicationToken applicationToken;
    3: Application application;
}

/**
 * An Application has sent a message.
 * 
 */
struct ApplicationSentMessage
{
    1: optional Banana.Message message;
    /** The Application that sent the message. */
    2: Application application;
}

/**
 * An Event represents the different types of events that can
 * occur within the Banana Service.
 */
union Event
{
    1: HealthCheckFailed healthCheckFailed;
    2: HealthCheckBackToNormal healthCheckBackToNormal;
    3: ApplicationTokenRenewed applicationTokenRenewed;
    4: ApplicationTokenRegenerated applicationTokenRegenerated;
    5: ApplicationSentMessage applicationSentMessage;
}

/**
 * A Notification defines an Event, and the time that it happened.
 */
struct Notification
{
    1: Event event;
    2: timestamp timestamp;
}
